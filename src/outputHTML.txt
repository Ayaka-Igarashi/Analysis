State(Data state,Consume the next input character:,List(Trans(U+0026 AMPERSAND (&amp;),Set the return state to the data state. Switch to the character reference state.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the tag open state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit the current input character as a character token.), Trans(EOF,Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(RCDATA state,Consume the next input character:,List(Trans(U+0026 AMPERSAND (&amp;),Set the return state to the RCDATA state. Switch to the character reference state.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the RCDATA less-than sign state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(RAWTEXT state,Consume the next input character:,List(Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the RAWTEXT less-than sign state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(Script data state,Consume the next input character:,List(Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data less-than sign state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(PLAINTEXT state,Consume the next input character:,List(Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(Tag open state,Consume the next input character:,List(Trans(U+0021 EXCLAMATION MARK (!),Switch to the markup declaration open state.), Trans(U+002F SOLIDUS (/),Switch to the end tag open state.), Trans(ASCII alpha,Create a new start tag token, set its tag name to the empty string. Reconsume in the tag name state. ), Trans(U+003F QUESTION MARK (?),This is an unexpected-question-mark-instead-of-tag-name parse error. Create a comment token whose data is the empty string. Reconsume in the bogus comment state.), Trans(EOF,This is an eof-before-tag-name parse error. Emit a U+003C LESS-THAN SIGN character token and an end-of-file token.), Trans(Anything else,This is an invalid-first-character-of-tag-name parse error. Emit a U+003C LESS-THAN SIGN character token. Reconsume in the data state.)))
State(End tag open state,Consume the next input character:,List(Trans(ASCII alpha,Create a new end tag token, set its tag name to the empty string. Reconsume in the tag name state. ), Trans(U+003E GREATER-THAN SIGN (&gt;),This is a missing-end-tag-name parse error. Switch to the data state.), Trans(EOF,This is an eof-before-tag-name parse error. Emit a U+003C LESS-THAN SIGN character token, a U+002F SOLIDUS character token and an end-of-file token. ), Trans(Anything else,This is an invalid-first-character-of-tag-name parse error. Create a comment token whose data is the empty string. Reconsume in the bogus comment state.)))
State(Tag name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Switch to the before attribute name state.), Trans(U+000A LINE FEED (LF),Switch to the before attribute name state.), Trans(U+000C FORM FEED (FF),Switch to the before attribute name state.), Trans(U+0020 SPACE,Switch to the before attribute name state.), Trans(U+002F SOLIDUS (/),Switch to the self-closing start tag state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the data state. Emit the current tag token.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current tag token's tag name.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the current tag token's tag name.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,Append the current input character to the current tag token's tag name.)))
State(RCDATA less-than sign state,Consume the next input character:,List(Trans(U+002F SOLIDUS (/),Set the temporary buffer to the empty string. Switch to the RCDATA end tag open state.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token. Reconsume in the RCDATA state.)))
State(RCDATA end tag open state,Consume the next input character:,List(Trans(ASCII alpha,Create a new end tag token, set its tag name to the empty string. Reconsume in the RCDATA end tag name state. ), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token and a U+002F SOLIDUS character token. Reconsume in the RCDATA state.)))
State(RCDATA end tag name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000A LINE FEED (LF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000C FORM FEED (FF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+0020 SPACE,If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+002F SOLIDUS (/),If the current end tag token is an appropriate end tag token, then switch to the self-closing start tag state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+003E GREATER-THAN SIGN (&gt;),If the current end tag token is an appropriate end tag token, then switch to the data state and emit the current tag token. Otherwise, treat it as per the "anything else" entry below.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(ASCII lower alpha,Append the current input character to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token, a U+002F SOLIDUS character token, and a character token for each of the characters in the temporary buffer (in the order they were added to the buffer). Reconsume in the RCDATA state.)))
State(RAWTEXT less-than sign state,Consume the next input character:,List(Trans(U+002F SOLIDUS (/),Set the temporary buffer to the empty string. Switch to the RAWTEXT end tag open state.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token. Reconsume in the RAWTEXT state.)))
State(RAWTEXT end tag open state,Consume the next input character:,List(Trans(ASCII alpha,Create a new end tag token, set its tag name to the empty string. Reconsume in the RAWTEXT end tag name state. ), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token and a U+002F SOLIDUS character token. Reconsume in the RAWTEXT state.)))
State(RAWTEXT end tag name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000A LINE FEED (LF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000C FORM FEED (FF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+0020 SPACE,If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+002F SOLIDUS (/),If the current end tag token is an appropriate end tag token, then switch to the self-closing start tag state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+003E GREATER-THAN SIGN (&gt;),If the current end tag token is an appropriate end tag token, then switch to the data state and emit the current tag token. Otherwise, treat it as per the "anything else" entry below.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(ASCII lower alpha,Append the current input character to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token, a U+002F SOLIDUS character token, and a character token for each of the characters in the temporary buffer (in the order they were added to the buffer). Reconsume in the RAWTEXT state.)))
State(Script data less-than sign state,Consume the next input character:,List(Trans(U+002F SOLIDUS (/),Set the temporary buffer to the empty string. Switch to the script data end tag open state.), Trans(U+0021 EXCLAMATION MARK (!),Switch to the script data escape start state. Emit a U+003C LESS-THAN SIGN character token and a U+0021 EXCLAMATION MARK character token.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token. Reconsume in the script data state.)))
State(Script data end tag open state,Consume the next input character:,List(Trans(ASCII alpha,Create a new end tag token, set its tag name to the empty string. Reconsume in the script data end tag name state. ), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token and a U+002F SOLIDUS character token. Reconsume in the script data state.)))
State(Script data end tag name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000A LINE FEED (LF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000C FORM FEED (FF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+0020 SPACE,If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+002F SOLIDUS (/),If the current end tag token is an appropriate end tag token, then switch to the self-closing start tag state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+003E GREATER-THAN SIGN (&gt;),If the current end tag token is an appropriate end tag token, then switch to the data state and emit the current tag token. Otherwise, treat it as per the "anything else" entry below.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(ASCII lower alpha,Append the current input character to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token, a U+002F SOLIDUS character token, and a character token for each of the characters in the temporary buffer (in the order they were added to the buffer). Reconsume in the script data state.)))
State(Script data escape start state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Switch to the script data escape start dash state. Emit a U+002D HYPHEN-MINUS character token.), Trans(Anything else,Reconsume in the script data state.)))
State(Script data escape start dash state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Switch to the script data escaped dash dash state. Emit a U+002D HYPHEN-MINUS character token.), Trans(Anything else,Reconsume in the script data state.)))
State(Script data escaped state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Switch to the script data escaped dash state. Emit a U+002D HYPHEN-MINUS character token.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data escaped less-than sign state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,This is an eof-in-script-html-comment-like-text parse error. Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(Script data escaped dash state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Switch to the script data escaped dash dash state. Emit a U+002D HYPHEN-MINUS character token.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data escaped less-than sign state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Switch to the script data escaped state. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,This is an eof-in-script-html-comment-like-text parse error. Emit an end-of-file token.), Trans(Anything else,Switch to the script data escaped state. Emit the current input character as a character token.)))
State(Script data escaped dash dash state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Emit a U+002D HYPHEN-MINUS character token.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data escaped less-than sign state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the script data state. Emit a U+003E GREATER-THAN SIGN character token.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Switch to the script data escaped state. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,This is an eof-in-script-html-comment-like-text parse error. Emit an end-of-file token.), Trans(Anything else,Switch to the script data escaped state. Emit the current input character as a character token.)))
State(Script data escaped less-than sign state,Consume the next input character:,List(Trans(U+002F SOLIDUS (/),Set the temporary buffer to the empty string. Switch to the script data escaped end tag open state.), Trans(ASCII alpha,Set the temporary buffer to the empty string. Emit a U+003C LESS-THAN SIGN character token. Reconsume in the script data double escape start state.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token. Reconsume in the script data escaped state.)))
State(Script data escaped end tag open state,Consume the next input character:,List(Trans(ASCII alpha,Create a new end tag token, set its tag name to the empty string. Reconsume in the script data escaped end tag name state.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token and a U+002F SOLIDUS character token. Reconsume in the script data escaped state.)))
State(Script data escaped end tag name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000A LINE FEED (LF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+000C FORM FEED (FF),If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+0020 SPACE,If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+002F SOLIDUS (/),If the current end tag token is an appropriate end tag token, then switch to the self-closing start tag state. Otherwise, treat it as per the "anything else" entry below.), Trans(U+003E GREATER-THAN SIGN (&gt;),If the current end tag token is an appropriate end tag token, then switch to the data state and emit the current tag token. Otherwise, treat it as per the "anything else" entry below.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(ASCII lower alpha,Append the current input character to the current tag token's tag name. Append the current input character to the temporary buffer.), Trans(Anything else,Emit a U+003C LESS-THAN SIGN character token, a U+002F SOLIDUS character token, and a character token for each of the characters in the temporary buffer  (in the order they were added to the buffer). Reconsume in the script data escaped state.)))
State(Script data double escape start state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),If the temporary buffer is the string "script", then switch to the script data double escaped state. Otherwise, you switch to the script data escaped state. Emit the current input character as a character token.), Trans(U+000A LINE FEED (LF),If the temporary buffer is the string "script", then switch to the script data double escaped state. Otherwise, you switch to the script data escaped state. Emit the current input character as a character token.), Trans(U+000C FORM FEED (FF),If the temporary buffer is the string "script", then switch to the script data double escaped state. Otherwise, you switch to the script data escaped state. Emit the current input character as a character token.), Trans(U+0020 SPACE,If the temporary buffer is the string "script", then switch to the script data double escaped state. Otherwise, you switch to the script data escaped state. Emit the current input character as a character token.), Trans(U+002F SOLIDUS (/),If the temporary buffer is the string "script", then switch to the script data double escaped state. Otherwise, you switch to the script data escaped state. Emit the current input character as a character token.), Trans(U+003E GREATER-THAN SIGN (&gt;),If the temporary buffer is the string "script", then switch to the script data double escaped state. Otherwise, you switch to the script data escaped state. Emit the current input character as a character token.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the temporary buffer. Emit the current input character as a character token.), Trans(ASCII lower alpha,Append the current input character to the temporary buffer. Emit the current input character as a character token.), Trans(Anything else,Reconsume in the script data escaped state.)))
State(Script data double escaped state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Switch to the script data double escaped dash state. Emit a U+002D HYPHEN-MINUS character token.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data double escaped less-than sign state. Emit a U+003C LESS-THAN SIGN character token.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,This is an eof-in-script-html-comment-like-text parse error. Emit an end-of-file token.), Trans(Anything else,Emit the current input character as a character token.)))
State(Script data double escaped dash state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Switch to the script data double escaped dash dash state. Emit a U+002D HYPHEN-MINUS character token.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data double escaped less-than sign state. Emit a U+003C LESS-THAN SIGN character token.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Switch to the script data double escaped state. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,This is an eof-in-script-html-comment-like-text parse error. Emit an end-of-file token.), Trans(Anything else,Switch to the script data double escaped state. Emit the current input character as a character token.)))
State(Script data double escaped dash dash state,Consume the next input character:,List(Trans(U+002D HYPHEN-MINUS (-),Emit a U+002D HYPHEN-MINUS character token.), Trans(U+003C LESS-THAN SIGN (&lt;),Switch to the script data double escaped less-than sign state. Emit a U+003C LESS-THAN SIGN character token.), Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the script data state. Emit a U+003E GREATER-THAN SIGN character token.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Switch to the script data double escaped state. Emit a U+FFFD REPLACEMENT CHARACTER character token.), Trans(EOF,This is an eof-in-script-html-comment-like-text parse error. Emit an end-of-file token.), Trans(Anything else,Switch to the script data double escaped state. Emit the current input character as a character token.)))
State(Script data double escaped less-than sign state,Consume the next input character:,List(Trans(U+002F SOLIDUS (/),Set the temporary buffer to the empty string. Switch to the script data double escape end state. Emit a U+002F SOLIDUS character token.), Trans(Anything else,Reconsume in the script data double escaped state.)))
State(Script data double escape end state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),If the temporary buffer is the string "script", then switch to the script data escaped state. Otherwise, switch to the script data double escaped state. Emit the current input character as a character token.), Trans(U+000A LINE FEED (LF),If the temporary buffer is the string "script", then switch to the script data escaped state. Otherwise, switch to the script data double escaped state. Emit the current input character as a character token.), Trans(U+000C FORM FEED (FF),If the temporary buffer is the string "script", then switch to the script data escaped state. Otherwise, switch to the script data double escaped state. Emit the current input character as a character token.), Trans(U+0020 SPACE,If the temporary buffer is the string "script", then switch to the script data escaped state. Otherwise, switch to the script data double escaped state. Emit the current input character as a character token.), Trans(U+002F SOLIDUS (/),If the temporary buffer is the string "script", then switch to the script data escaped state. Otherwise, switch to the script data double escaped state. Emit the current input character as a character token.), Trans(U+003E GREATER-THAN SIGN (&gt;),If the temporary buffer is the string "script", then switch to the script data escaped state. Otherwise, switch to the script data double escaped state. Emit the current input character as a character token.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the temporary buffer. Emit the current input character as a character token.), Trans(ASCII lower alpha,Append the current input character to the temporary buffer. Emit the current input character as a character token.), Trans(Anything else,Reconsume in the script data double escaped state.)))
State(Before attribute name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Ignore the character.), Trans(U+000A LINE FEED (LF),Ignore the character.), Trans(U+000C FORM FEED (FF),Ignore the character.), Trans(U+0020 SPACE,Ignore the character.), Trans(U+002F SOLIDUS (/),Reconsume in the after attribute name state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Reconsume in the after attribute name state.), Trans(EOF,Reconsume in the after attribute name state.), Trans(U+003D EQUALS SIGN (=),This is an unexpected-equals-sign-before-attribute-name parse error. Start a new attribute in the current tag token. Set that attribute's name to the current input character, and its value to the empty string. Switch to the attribute name state.), Trans(Anything else,Start a new attribute in the current tag token. Set that attribute name and value to the empty string. Reconsume in the attribute name state.)))
State(Attribute name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Reconsume in the after attribute name state.), Trans(U+000A LINE FEED (LF),Reconsume in the after attribute name state.), Trans(U+000C FORM FEED (FF),Reconsume in the after attribute name state.), Trans(U+0020 SPACE,Reconsume in the after attribute name state.), Trans(U+002F SOLIDUS (/),Reconsume in the after attribute name state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Reconsume in the after attribute name state.), Trans(EOF,Reconsume in the after attribute name state.), Trans(U+003D EQUALS SIGN (=),Switch to the before attribute value state.), Trans(ASCII upper alpha,Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current attribute's name.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the current attribute's name.), Trans(U+0022 QUOTATION MARK ("),This is an unexpected-character-in-attribute-name parse error. Treat it as per the "anything else" entry below.), Trans(U+0027 APOSTROPHE ('),This is an unexpected-character-in-attribute-name parse error. Treat it as per the "anything else" entry below.), Trans(U+003C LESS-THAN SIGN (&lt;),This is an unexpected-character-in-attribute-name parse error. Treat it as per the "anything else" entry below.), Trans(Anything else,Append the current input character to the current attribute's name.)))
State(After attribute name state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Ignore the character.), Trans(U+000A LINE FEED (LF),Ignore the character.), Trans(U+000C FORM FEED (FF),Ignore the character.), Trans(U+0020 SPACE,Ignore the character.), Trans(U+002F SOLIDUS (/),Switch to the self-closing start tag state.), Trans(U+003D EQUALS SIGN (=),Switch to the before attribute value state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the data state. Emit the current tag token.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,Start a new attribute in the current tag token. Set that attribute name and value to the empty string. Reconsume in the attribute name state.)))
State(Before attribute value state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Ignore the character.), Trans(U+000A LINE FEED (LF),Ignore the character.), Trans(U+000C FORM FEED (FF),Ignore the character.), Trans(U+0020 SPACE,Ignore the character.), Trans(U+0022 QUOTATION MARK ("),Switch to the attribute value (double-quoted) state.), Trans(U+0027 APOSTROPHE ('),you Switch to the attribute value (single-quoted) state.), Trans(U+003E GREATER-THAN SIGN (&gt;),This is a missing-attribute-value parse error. Switch to the data state. Emit the current tag token.), Trans(Anything else,you Reconsume in the attribute value (unquoted) state.)))
State(Attribute value (double-quoted) state,Consume the next input character:,List(Trans(U+0022 QUOTATION MARK ("),Switch to the after attribute value (quoted) state.), Trans(U+0026 AMPERSAND (&amp;),you Set the return state to the attribute value (double-quoted) state. Switch to the character reference state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the current attribute's value.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,Append the current input character to the current attribute's value.)))
State(Attribute value (single-quoted) state,Consume the next input character:,List(Trans(U+0027 APOSTROPHE ('),Switch to the after attribute value (quoted) state.), Trans(U+0026 AMPERSAND (&amp;),Set the return state to the attribute value (single-quoted) state. Switch to the character reference state.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the current attribute's value.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,Append the current input character to the current attribute's value.)))
State(Attribute value (unquoted) state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Switch to the before attribute name state.), Trans(U+000A LINE FEED (LF),Switch to the before attribute name state.), Trans(U+000C FORM FEED (FF),Switch to the before attribute name state.), Trans(U+0020 SPACE,Switch to the before attribute name state.), Trans(U+0026 AMPERSAND (&amp;),Set the return state to the attribute value (unquoted) state. Switch to the character reference state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the data state. Emit the current tag token.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the current attribute's value.), Trans(U+0022 QUOTATION MARK ("),This is an unexpected-character-in-unquoted-attribute-value parse error. Treat it as per the "anything else" entry below.), Trans(U+0027 APOSTROPHE ('),This is an unexpected-character-in-unquoted-attribute-value parse error. Treat it as per the "anything else" entry below.), Trans(U+003C LESS-THAN SIGN (&lt;),This is an unexpected-character-in-unquoted-attribute-value parse error. Treat it as per the "anything else" entry below.), Trans(U+003D EQUALS SIGN (=),This is an unexpected-character-in-unquoted-attribute-value parse error. Treat it as per the "anything else" entry below.), Trans(U+0060 GRAVE ACCENT (`),This is an unexpected-character-in-unquoted-attribute-value parse error. Treat it as per the "anything else" entry below.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,Append the current input character to the current attribute's value.)))
State(After attribute value (quoted) state,Consume the next input character:,List(Trans(U+0009 CHARACTER TABULATION (tab),Switch to the before attribute name state.), Trans(U+000A LINE FEED (LF),Switch to the before attribute name state.), Trans(U+000C FORM FEED (FF),Switch to the before attribute name state.), Trans(U+0020 SPACE,Switch to the before attribute name state.), Trans(U+002F SOLIDUS (/),Switch to the self-closing start tag state.), Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the data state. Emit the current tag token.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,This is a missing-whitespace-between-attributes parse error. Reconsume in the before attribute name state. )))
State(Self-closing start tag state,Consume the next input character:,List(Trans(U+003E GREATER-THAN SIGN (&gt;),Set the self-closing flag of the current tag token. Switch to the data state. Emit the current tag token.), Trans(EOF,This is an eof-in-tag parse error. Emit an end-of-file token.), Trans(Anything else,This is an unexpected-solidus-in-tag parse error. Reconsume in the before attribute name state.)))
State(Bogus comment state,Consume the next input character:,List(Trans(U+003E GREATER-THAN SIGN (&gt;),Switch to the data state. Emit the comment token.), Trans(EOF,Emit the comment. Emit an end-of-file token.), Trans(U+0000 NULL,This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the comment token's data.), Trans(Anything else,Append the current input character to the comment token's data.)))
