Data state|data state|RCDATA state|rCDATA state|RAWTEXT state|rAWTEXT state|Script data state|script data state|PLAINTEXT state|pLAINTEXT state|Tag open state|tag open state|End tag open state|end tag open state|Tag name state|tag name state|RCDATA less-than sign state|rCDATA less-than sign state|RCDATA end tag open state|rCDATA end tag open state|RCDATA end tag name state|rCDATA end tag name state|RAWTEXT less-than sign state|rAWTEXT less-than sign state|RAWTEXT end tag open state|rAWTEXT end tag open state|RAWTEXT end tag name state|rAWTEXT end tag name state|Script data less-than sign state|script data less-than sign state|Script data end tag open state|script data end tag open state|Script data end tag name state|script data end tag name state|Script data escape start state|script data escape start state|Script data escape start dash state|script data escape start dash state|Script data escaped state|script data escaped state|Script data escaped dash state|script data escaped dash state|Script data escaped dash dash state|script data escaped dash dash state|Script data escaped less-than sign state|script data escaped less-than sign state|Script data escaped end tag open state|script data escaped end tag open state|Script data escaped end tag name state|script data escaped end tag name state|Script data double escape start state|script data double escape start state|Script data double escaped state|script data double escaped state|Script data double escaped dash state|script data double escaped dash state|Script data double escaped dash dash state|script data double escaped dash dash state|Script data double escaped less-than sign state|script data double escaped less-than sign state|Script data double escape end state|script data double escape end state|Before attribute name state|before attribute name state|Attribute name state|attribute name state|After attribute name state|after attribute name state|Before attribute value state|before attribute value state|Attribute value \(double-quoted\) state|attribute value \(double-quoted\) state|Attribute value \(single-quoted\) state|attribute value \(single-quoted\) state|Attribute value \(unquoted\) state|attribute value \(unquoted\) state|After attribute value \(quoted\) state|after attribute value \(quoted\) state|Self-closing start tag state|self-closing start tag state|Bogus comment state|bogus comment state|Markup declaration open state|markup declaration open state|Comment start state|comment start state|Comment start dash state|comment start dash state|Comment state|comment state|Comment less-than sign state|comment less-than sign state|Comment less-than sign bang state|comment less-than sign bang state|Comment less-than sign bang dash state|comment less-than sign bang dash state|Comment less-than sign bang dash dash state|comment less-than sign bang dash dash state|Comment end dash state|comment end dash state|Comment end state|comment end state|Comment end bang state|comment end bang state|DOCTYPE state|dOCTYPE state|Before DOCTYPE name state|before DOCTYPE name state|DOCTYPE name state|dOCTYPE name state|After DOCTYPE name state|after DOCTYPE name state|After DOCTYPE public keyword state|after DOCTYPE public keyword state|Before DOCTYPE public identifier state|before DOCTYPE public identifier state|DOCTYPE public identifier \(double-quoted\) state|dOCTYPE public identifier \(double-quoted\) state|DOCTYPE public identifier \(single-quoted\) state|dOCTYPE public identifier \(single-quoted\) state|After DOCTYPE public identifier state|after DOCTYPE public identifier state|Between DOCTYPE public and system identifiers state|between DOCTYPE public and system identifiers state|After DOCTYPE system keyword state|after DOCTYPE system keyword state|Before DOCTYPE system identifier state|before DOCTYPE system identifier state|DOCTYPE system identifier \(double-quoted\) state|dOCTYPE system identifier \(double-quoted\) state|DOCTYPE system identifier \(single-quoted\) state|dOCTYPE system identifier \(single-quoted\) state|After DOCTYPE system identifier state|after DOCTYPE system identifier state|Bogus DOCTYPE state|bogus DOCTYPE state|CDATA section state|cDATA section state|CDATA section bracket state|cDATA section bracket state|CDATA section end state|cDATA section end state|Character reference state|character reference state|Named character reference state|named character reference state|Ambiguous ampersand state|ambiguous ampersand state|Numeric character reference state|numeric character reference state|Hexadecimal character reference start state|hexadecimal character reference start state|Decimal character reference start state|decimal character reference start state|Hexadecimal character reference state|hexadecimal character reference state|Decimal character reference state|decimal character reference state
Consume the next input character:
 => Consume the next input character.
If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.
 => If the current end tag token is an appropriate end tag token, then you switch to the Before_attribute_name_state. Otherwise, treat it as per the "anything else" entry below.
If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.
 => If the current end tag token is an appropriate end tag token, then you switch to the Before_attribute_name_state. Otherwise, treat it as per the "anything else" entry below.
If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.
 => If the current end tag token is an appropriate end tag token, then you switch to the Before_attribute_name_state. Otherwise, treat it as per the "anything else" entry below.
If the current end tag token is an appropriate end tag token, then switch to the before attribute name state. Otherwise, treat it as per the "anything else" entry below.
 => If the current end tag token is an appropriate end tag token, then you switch to the Before_attribute_name_state. Otherwise, treat it as per the "anything else" entry below.
If the current end tag token is an appropriate end tag token, then switch to the self-closing start tag state. Otherwise, treat it as per the "anything else" entry below.
 => If the current end tag token is an appropriate end tag token, then you switch to the Self_closing_start_tag_state. Otherwise, treat it as per the "anything else" entry below.
If the current end tag token is an appropriate end tag token, then switch to the data state and emit the current tag token. Otherwise, treat it as per the "anything else" entry below.
 => If the current end tag token is an appropriate end tag token, then you switch to the Data_state and you emit the current tag token. Otherwise, treat it as per the "anything else" entry below.
Append the lowercase version of the current input character (add 0x0020 to the character's code point) to the current tag token's tag name. Append the current input character to the temporary buffer.
 => you Append the lowercase version of the current input character (you add 0x0020 to the character's code point) to the current tag token's tag name. you Append the current input character to the temporary buffer.
Append the current input character to the current tag token's tag name. Append the current input character to the temporary buffer.
 => you Append the current input character to the current tag token's tag name. you Append the current input character to the temporary buffer.
Emit a U+003C LESS-THAN SIGN character token, a U+002F SOLIDUS character token, and a character token for each of the characters in the temporary buffer (in the order they were added to the buffer). Reconsume in the RCDATA state.
 => you Emit a U_003C LESS_THAN SIGN character token, a U_002F SOLIDUS character token, and a character token for each of the characters in the temporary buffer (in the order they were you added to the buffer). you Reconsume in the RCDATA_state.
