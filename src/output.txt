ROOT(List(S(List(S(List(NP(List(CD(Token(12.2.5.1)), NNP(Token(Data)), NN(Token(state)))), VP(List(VBD(Token(Consume)), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))))), Colon(Token(:)), S(List(NP(List(NNP(Token(U)), CD(Token(+0026)))), VP(List(VBD(Token(AMPERSAND)), S(List(LBracket(Token(()), NP(List(CC(Token(&)))), RBracket(Token())), VP(List(VB(Token(Set)), NP(List(DT(Token(the)), NN(Token(return)), NN(Token(state)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(data)), NN(Token(state)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(character)), NN(Token(reference)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NML(List(NN(Token(U)), CD(Token(+003)))), NNP(Token(C)), NNP(Token(LESS)))), Comma(Token(-)), PP(List(IN(Token(THAN)), NP(List(NP(List(NNP(Token(SIGN)))), LBracket(Token(()), VP(List(SYM(Token(<)), NP(List(NN(Token())))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(tag)), JJ(Token(open)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U)), CD(Token(+0000)))), NNP(Token(NULL)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(ADJP(List(JJ(Token(unexpected)), HYPH(Token(-)), JJ(Token(null)))), HYPH(Token(-)), NN(Token(character)))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(as)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF)), NNP(Token(Emit)))), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything)), RB(Token(else)))), VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(as)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), Dot(Token(.))))))
ROOT(List(S(List(S(List(NP(List(CD(Token(12.2.5.2)), NNP(Token(RCDATA)), NN(Token(state)))), VP(List(VBD(Token(Consume)), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))))), Colon(Token(:)), S(List(NP(List(NNP(Token(U)), CD(Token(+0026)))), VP(List(VBD(Token(AMPERSAND)), S(List(LBracket(Token(()), NP(List(CC(Token(&)))), RBracket(Token())), VP(List(VB(Token(Set)), NP(List(DT(Token(the)), NN(Token(return)), NN(Token(state)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NNP(Token(RCDATA)), NN(Token(state)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(character)), NN(Token(reference)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NML(List(NN(Token(U)), CD(Token(+003)))), NNP(Token(C)), NNP(Token(LESS)))), Comma(Token(-)), PP(List(IN(Token(THAN)), NP(List(NP(List(NNP(Token(SIGN)))), LBracket(Token(()), VP(List(SYM(Token(<)), NP(List(NN(Token())))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), NNP(Token(RCDATA)))), ADJP(List(ADJP(List(JJR(Token(less)))), HYPH(Token(-)), PP(List(IN(Token(than)), NP(List(NN(Token(sign)), NN(Token(state)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U)), CD(Token(+0000)))), NNP(Token(NULL)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(ADJP(List(JJ(Token(unexpected)), HYPH(Token(-)), JJ(Token(null)))), HYPH(Token(-)), NN(Token(character)))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), JJ(Token(U+FFFD)), NNP(Token(REPLACEMENT)), NNP(Token(CHARACTER)), NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF)), NNP(Token(Emit)))), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything)), RB(Token(else)))), VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(as)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), Dot(Token(.))))))
GW is not defined
GW is not defined
ROOT(List(FRAG(List(NP(List(CD(Token(12.2.5.3)), NNP(Token(RAWTEXT)), NN(Token(state)))), NP(List(NNP(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), NP(List(NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(null)), LBracket(Token(<)), NP(List(null)), ADJP(List(JJ(Token(Switch)), PP(List(IN(Token(to)), ADVP(List(NP(List(DT(Token(the)), NN(Token(RAWTEXT)))), RBR(Token(less)))))), Comma(Token(-)), PP(List(IN(Token(than)), NP(List(NN(Token(sign)))))))), NP(List(NN(Token(state)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U)), CD(Token(+0000)))), NNP(Token(NULL)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(ADJP(List(JJ(Token(unexpected)), HYPH(Token(-)), JJ(Token(null)))), HYPH(Token(-)), NN(Token(character)))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), JJ(Token(U+FFFD)), NNP(Token(REPLACEMENT)), NNP(Token(CHARACTER)), NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF)), NNP(Token(Emit)))), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything)), RB(Token(else)))), VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(as)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), Dot(Token(.))))))
GW is not defined
GW is not defined
ROOT(List(FRAG(List(NP(List(CD(Token(12.2.5.4)))), NP(List(NNP(Token(Script)))), NP(List(NNS(Token(data)))), NP(List(NN(Token(state)))), NP(List(NNP(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), NP(List(NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(null)), LBracket(Token(<)), NP(List(null)), ADJP(List(JJ(Token(Switch)), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), NN(Token(script)), NNS(Token(data)))), ADJP(List(ADJP(List(JJR(Token(less)))), HYPH(Token(-)), PP(List(IN(Token(than)), NP(List(NN(Token(sign)))))))))))))), NP(List(NN(Token(state)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U)), CD(Token(+0000)))), NNP(Token(NULL)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(ADJP(List(JJ(Token(unexpected)), HYPH(Token(-)), JJ(Token(null)))), HYPH(Token(-)), NN(Token(character)))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), JJ(Token(U+FFFD)), NNP(Token(REPLACEMENT)), NNP(Token(CHARACTER)), NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF)), NNP(Token(Emit)))), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything)), RB(Token(else)))), VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(as)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(FRAG(List(NP(List(CD(Token(12.2.5.5)), NML(List(NN(Token(PLAINTEXT)), NN(Token(state)))), NNP(Token(Consume)))), NP(List(NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), NP(List(NNP(Token(U)), NNP(Token(+0000)), NNP(Token(NULL)))))))), S(List(NP(List(DT(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(ADJP(List(JJ(Token(unexpected)), HYPH(Token(-)), JJ(Token(null)))), HYPH(Token(-)), NN(Token(character)))), NN(Token(parse)), NN(Token(error)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), JJ(Token(U+FFFD)), NNP(Token(REPLACEMENT)), NNP(Token(CHARACTER)), NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF)), NNP(Token(Emit)))), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything)), RB(Token(else)))), VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(as)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), Dot(Token(.))))))
GW is not defined
ROOT(List(FRAG(List(NP(List(CD(Token(12.2.5.6)), NN(Token(Tag)))), NP(List(JJ(Token(open)), NN(Token(state)))), NP(List(NNP(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0021)))), NP(List(NNP(Token(EXCLAMATION)), NNP(Token(MARK)))), NP(List(null)), Dot(Token(!)), RBracket(Token()))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), ADJP(List(NP(List(NN(Token(markup)), NN(Token(declaration)))), JJ(Token(open)))), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)))), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(NN(Token(end)), NN(Token(tag)))), JJ(Token(open)), NN(Token(state)))))))), Dot(Token(.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(NNP(Token(ASCII)), NN(Token(alpha)))), VP(List(VP(List(VB(Token(Create)), NP(List(DT(Token(a)), JJ(Token(new)), NN(Token(start)), NN(Token(tag)), NN(Token(token)))))), Comma(Token(,)), VP(List(VB(Token(set)), NP(List(null, NN(Token(tag)), NN(Token(name)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NN(Token(tag)), NN(Token(name)), NN(Token(state)))))))), Dot(Token(.))))))
GW is not defined
ROOT(List(FRAG(List(NP(List(NNP(Token(U)), CD(Token(+003)))), NP(List(NNP(Token(F)), NNP(Token(QUESTION)), NNP(Token(MARK)))), NP(List(null)), Dot(Token(?)), RBracket(Token()))))))
ROOT(List(S(List(NP(List(DT(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(unexpected)), NML(List(PP(List(SYM(Token(-)), NP(List(NN(Token(question)), HYPH(Token(-)), NN(Token(mark)))))), HYPH(Token(-)), PP(List(ADVP(List(RB(Token(instead)))), HYPH(Token(-)), IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(tag)), HYPH(Token(-)), NN(Token(name)))))))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Create)), NP(List(NP(List(DT(Token(a)), NN(Token(comment)), NN(Token(token)))), SBAR(List(WHNP(List(WPD(Token(whose)), NML(List(NNS(Token(data)))))), S(List(VP(List(VBZ(Token(is)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), JJ(Token(bogus)), NN(Token(comment)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NNP(Token(EOF)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(eof)))), HYPH(Token(-)), PP(List(IN(Token(before)), HYPH(Token(-)), NP(List(NN(Token(tag)), HYPH(Token(-)), NN(Token(name)))))))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit)), NP(List(NP(List(DT(Token(a)), NML(List(NML(List(NNP(Token(U)), NNP(Token(+003)), NNP(Token(C)), NNP(Token(LESS)))), HYPH(Token(-)), NML(List(NNP(Token(THAN)), NNP(Token(SIGN)))))), NN(Token(character)), NN(Token(token)))), CC(Token(and)), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(DT(Token(This)))))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(NML(List(ADJP(List(JJ(Token(invalid)), HYPH(Token(-)), JJ(Token(first)))), HYPH(Token(-)), NN(Token(character)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(tag)), HYPH(Token(-)), NN(Token(name)))))))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NN(Token(data)), NN(Token(state)))))))), Dot(Token(.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(CD(Token(12.2.5.7)), NML(List(NN(Token(End)), NN(Token(tag)))), NN(Token(open)), NN(Token(state)))), VP(List(VBD(Token(Consume)), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), S(List(NP(List(NNP(Token(ASCII)), NN(Token(alpha)))), VP(List(VP(List(VB(Token(Create)), NP(List(DT(Token(a)), JJ(Token(new)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))))), Comma(Token(,)), VP(List(VB(Token(set)), NP(List(null, NN(Token(tag)), NN(Token(name)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NN(Token(tag)), NN(Token(name)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U)), CD(Token(+003)))), NNP(Token(E)), NNP(Token(GREATER)), HYPH(Token(-)), NNP(Token(THAN)))), VP(List(VBP(Token(SIGN)), NP(List(NP(List(LBracket(Token(()), NNP(Token(>)), RBracket(Token())))), SBAR(List(S(List(NP(List(DT(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(a)), ADJP(List(JJ(Token(missing)), HYPH(Token(-)), NN(Token(end)))), HYPH(Token(-)), NML(List(NN(Token(tag)), HYPH(Token(-)), NN(Token(name)))), NNS(Token(parse)), NN(Token(error)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(data)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NNP(Token(EOF)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(eof)))), HYPH(Token(-)), PP(List(IN(Token(before)), HYPH(Token(-)), NP(List(NN(Token(tag)), HYPH(Token(-)), NN(Token(name)))))))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit)), NP(List(NP(List(DT(Token(a)), NML(List(NML(List(NNP(Token(U)), NNP(Token(+003)), NNP(Token(C)), NNP(Token(LESS)))), HYPH(Token(-)), NML(List(NNP(Token(THAN)), NNP(Token(SIGN)))))), NN(Token(character)), NN(Token(token)))), Comma(Token(,)), NP(List(DT(Token(a)), NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)), NNP(Token(SOLIDUS)))), NN(Token(character)), NN(Token(token)))), CC(Token(and)), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(DT(Token(This)))))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(NML(List(ADJP(List(JJ(Token(invalid)), HYPH(Token(-)), JJ(Token(first)))), HYPH(Token(-)), NN(Token(character)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(tag)), HYPH(Token(-)), NN(Token(name)))))))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Create)), NP(List(NP(List(DT(Token(a)), NN(Token(comment)), NN(Token(token)))), SBAR(List(WHNP(List(WPD(Token(whose)), NML(List(NNS(Token(data)))))), S(List(VP(List(VBZ(Token(is)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), JJ(Token(bogus)), NN(Token(comment)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NP(List(CD(Token(12.2.5.8)), NN(Token(Tag)))), NP(List(NN(Token(name)), NN(Token(state)))), NP(List(NNP(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))), Comma(Token(:)), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0009)))), NP(List(NNP(Token(CHARACTER)), NNP(Token(TABULATION)))), NP(List(LBracket(Token(()), NN(Token(tab)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+000)))), NP(List(DT(Token(A)), NN(Token(LINE)))), NP(List(NNP(Token(FEED)))), NP(List(LBracket(Token(()), NNP(Token(LF)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+000)))), NP(List(NNP(Token(C)), NNP(Token(FORM)), NNP(Token(FEED)))), NP(List(LBracket(Token(()), NNP(Token(FF)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0020)))), NP(List(NNP(Token(SPACE)))), VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(PP(List(IN(Token(before)), NP(List(NN(Token(attribute)))))))), NN(Token(name)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)))), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(NN(Token(self)), HYPH(Token(-)), NN(Token(closing)))), NN(Token(start)), NN(Token(tag)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(U)), NML(List(CD(Token(+003)), NN(Token(E)))), NNP(Token(GREATER)))), Comma(Token(-)), PP(List(IN(Token(THAN)), NP(List(NNP(Token(SIGN)), LBracket(Token(()), NNP(Token(>)), RBracket(Token())), NNP(Token(Switch)))))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(data)), NN(Token(state)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NNP(Token(ASCII)), JJ(Token(upper)), NN(Token(alpha)))), VP(List(VBD(Token(Append)), NP(List(NP(List(DT(Token(the)), NN(Token(lowercase)), NN(Token(version)))), PP(List(IN(Token(of)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))))))), PRN(List(LBracket(Token(()), S(List(VP(List(VB(Token(add)), NP(List(NNS(Token(0x0020)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), NN(Token(character)), POS(Token('s)))), NN(Token(code)), NN(Token(point)))))))))), RBracket(Token())))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U)), CD(Token(+0000)))), NNP(Token(NULL)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(ADJP(List(JJ(Token(unexpected)), HYPH(Token(-)), JJ(Token(null)))), HYPH(Token(-)), NN(Token(character)))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Append)), NP(List(DT(Token(a)), NNP(Token(U+FFFD)), NNP(Token(REPLACEMENT)), NNP(Token(CHARACTER)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NNP(Token(EOF)), NNP(Token(This)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), NML(List(NN(Token(eof)), HYPH(Token(-)), IN(Token(in)), HYPH(Token(-)), NN(Token(tag)))), NN(Token(parse)), NN(Token(error)))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit)), NP(List(DT(Token(an)), NML(List(NML(List(NN(Token(end)))), HYPH(Token(-)), PP(List(IN(Token(of)), HYPH(Token(-)), NP(List(NN(Token(file)))))))), NN(Token(token)))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything)), RB(Token(else)))), VP(List(VBD(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(NP(List(NP(List(NP(List(ADJP(List(ADJP(List(NP(List(CD(Token(12.2.5.9)), NN(Token(RCDATA)))), JJR(Token(less)))), HYPH(Token(-)), PP(List(IN(Token(than)), NP(List(NN(Token(sign)), NN(Token(state)))))))), NN(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))), Colon(Token(:)), NP(List(NP(List(NML(List(NN(Token(U)), CD(Token(+002)))), NN(Token(F)), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), VP(List(VBN(Token(Set)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NNP(Token(RCDATA)), NN(Token(end)), NN(Token(tag)))))), NP(List(JJ(Token(open)), NN(Token(state)))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NNP(Token(RCDATA)), NN(Token(state)))))))), Dot(Token(.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(CD(Token(12.2.5.10)), NML(List(NNP(Token(RCDATA)), NN(Token(end)), NN(Token(tag)))), NN(Token(open)), NN(Token(state)))), VP(List(VBD(Token(Consume)), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), S(List(NP(List(NNP(Token(ASCII)), NN(Token(alpha)))), VP(List(VP(List(VB(Token(Create)), NP(List(DT(Token(a)), JJ(Token(new)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))))), Comma(Token(,)), VP(List(VB(Token(set)), NP(List(null, NN(Token(tag)), NN(Token(name)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NNP(Token(RCDATA)), NN(Token(end)), NN(Token(tag)), NN(Token(name)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NP(List(NN(Token(token)))), CC(Token(and)), NP(List(DT(Token(a)), NN(Token(U)))))), NP(List(CD(Token(+002)))), NP(List(NNP(Token(F)), NNP(Token(SOLIDUS)))), NP(List(NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NNP(Token(RCDATA)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NP(List(CD(Token(12.2.5.11)))), NP(List(NN(Token(RCDATA)), NN(Token(end)), NN(Token(tag)), NN(Token(name)), NN(Token(state)), NN(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))), Comma(Token(:)), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0009)))), NP(List(NNP(Token(CHARACTER)), NNP(Token(TABULATION)))), NP(List(LBracket(Token(()), NN(Token(tab)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+000)))), NP(List(DT(Token(A)), NN(Token(LINE)))), NP(List(NNP(Token(FEED)))), NP(List(LBracket(Token(()), NNP(Token(LF)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+000)))), NP(List(NNP(Token(C)), NNP(Token(FORM)), NNP(Token(FEED)))), NP(List(LBracket(Token(()), NNP(Token(FF)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0020)))), VP(List(VP(List(VB(Token(SPACE)), SBAR(List(IN(Token(If)), S(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(appropriate)), NML(List(NN(Token(end)), NN(Token(tag)))), NN(Token(token)))))))))))), Comma(Token(,)), VP(List(ADVP(List(RB(Token(then)))), VB(Token(switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(PP(List(IN(Token(before)), NP(List(NN(Token(attribute)))))))), NN(Token(name)), NN(Token(state)))))))))), Dot(Token(.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise)))), Comma(Token(,)), VP(List(VB(Token(treat)), NP(List(PRP(Token(it)))), PP(List(IN(Token(as)), NP(List(NML(List(PP(List(IN(Token(per)), NP(List(DT(Token(the)), LDoubleQuote(Token(")), NN(Token(anything)), NN(Token(else)), RDoubleQuote(Token(")))))))), NN(Token(entry)))))), ADVP(List(RB(Token(below)))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)))), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), SBAR(List(IN(Token(If)), S(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(appropriate)), NML(List(NN(Token(end)), NN(Token(tag)))), NN(Token(token)))), Comma(Token(,)), ADVP(List(RB(Token(then)))))))))), VP(List(VBP(Token(switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(NN(Token(self)), HYPH(Token(-)), NN(Token(closing)))), NN(Token(start)), NN(Token(tag)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise)))), Comma(Token(,)), VP(List(VB(Token(treat)), NP(List(PRP(Token(it)))), PP(List(IN(Token(as)), NP(List(NML(List(PP(List(IN(Token(per)), NP(List(DT(Token(the)), LDoubleQuote(Token(")), NN(Token(anything)), NN(Token(else)), RDoubleQuote(Token(")))))))), NN(Token(entry)))))), ADVP(List(RB(Token(below)))))), Dot(Token(.))))))
ROOT(List(NP(List(FRAG(List(NP(List(NP(List(NNP(Token(U)), CD(Token(+003)), NN(Token(E)))), NP(List(NNP(Token(GREATER)), HYPH(Token(-)), NNP(Token(THAN)), NNP(Token(SIGN)))))), LBracket(Token(()), NP(List(NNP(Token(>)))), RBracket(Token())))), S(List(SBAR(List(IN(Token(If)), S(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(appropriate)), NML(List(NN(Token(end)), NN(Token(tag)))), NN(Token(token)))))))))), Comma(Token(,)), ADVP(List(RB(Token(then)))), VP(List(VP(List(VB(Token(switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(data)), NN(Token(state)))))))), CC(Token(and)), VP(List(VB(Token(emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)))))))))), Dot(Token(.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise)))), Comma(Token(,)), VP(List(VB(Token(treat)), NP(List(PRP(Token(it)))), PP(List(IN(Token(as)), NP(List(NML(List(PP(List(IN(Token(per)), NP(List(DT(Token(the)), LDoubleQuote(Token(")), NN(Token(anything)), NN(Token(else)), RDoubleQuote(Token(")))))))), NN(Token(entry)))))), ADVP(List(RB(Token(below)))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NNP(Token(ASCII)), JJ(Token(upper)), NN(Token(alpha)))), VP(List(VBD(Token(Append)), NP(List(NP(List(DT(Token(the)), NN(Token(lowercase)), NN(Token(version)))), PP(List(IN(Token(of)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))))))), PRN(List(LBracket(Token(()), S(List(VP(List(VB(Token(add)), NP(List(NNS(Token(0x0020)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), NN(Token(character)), POS(Token('s)))), NN(Token(code)), NN(Token(point)))))))))), RBracket(Token())))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NP(List(NNP(Token(ASCII)))), NP(List(JJR(Token(lower)), NN(Token(alpha)))))), VP(List(VBD(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))))))), Dot(Token(.))))))
RRC is not defined
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), null, Comma(Token(-)), PP(List(IN(Token(THAN)), NP(List(NP(List(JJ(Token(SIGN)), NN(Token(character)), NN(Token(token)))), Comma(Token(,)), NP(List(DT(Token(a)), NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)), NNP(Token(SOLIDUS)))), NN(Token(character)), NN(Token(token)))), Comma(Token(,)), CC(Token(and)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), PP(List(IN(Token(for)), NP(List(NP(List(DT(Token(each)))), PP(List(IN(Token(of)), NP(List(NP(List(DT(Token(the)), NNS(Token(characters)))), PP(List(IN(Token(in)), NP(List(NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))), LBracket(Token(()), PP(List(IN(Token(in)), NP(List(NP(List(DT(Token(the)), NN(Token(order)))), SBAR(List(S(List(NP(List(PRP(Token(they)))), VP(List(VBD(Token(were)), VP(List(VBN(Token(added)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(buffer)))))))))))))))))), RBracket(Token())))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NNP(Token(RCDATA)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(CD(Token(12.2.5.12)), JJ(Token(RAWTEXT)), ADJP(List(ADJP(List(JJR(Token(less)))), HYPH(Token(-)), PP(List(IN(Token(than)), NP(List(NN(Token(sign)))))))), NN(Token(state)))), VP(List(VBD(Token(Consume)), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), S(List(NP(List(NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)))), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), VP(List(VB(Token(Set)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(RAWTEXT)), NML(List(NN(Token(end)), NN(Token(tag)))), JJ(Token(open)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), JJ(Token(RAWTEXT)), NN(Token(state)))))))), Dot(Token(.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(CD(Token(12.2.5.13)), JJ(Token(RAWTEXT)), NML(List(NN(Token(end)), NN(Token(tag)))), JJ(Token(open)), NN(Token(state)))), VP(List(VBD(Token(Consume)), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))), Colon(Token(:)), S(List(NP(List(NNP(Token(ASCII)), NN(Token(alpha)))), VP(List(VP(List(VB(Token(Create)), NP(List(DT(Token(a)), JJ(Token(new)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))))), Comma(Token(,)), VP(List(VB(Token(set)), NP(List(null, NN(Token(tag)), NN(Token(name)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NNP(Token(RAWTEXT)), NN(Token(end)), NN(Token(tag)), NN(Token(name)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NP(List(NN(Token(token)))), CC(Token(and)), NP(List(DT(Token(a)), NN(Token(U)))))), NP(List(CD(Token(+002)))), NP(List(NNP(Token(F)), NNP(Token(SOLIDUS)))), NP(List(NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), JJ(Token(RAWTEXT)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NP(List(CD(Token(12.2.5.14)))), NP(List(NN(Token(RAWTEXT)), NN(Token(end)), NN(Token(tag)), NN(Token(name)), NN(Token(state)), NN(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))), Comma(Token(:)), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0009)))), NP(List(NNP(Token(CHARACTER)), NNP(Token(TABULATION)))), NP(List(LBracket(Token(()), NN(Token(tab)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+000)))), NP(List(DT(Token(A)), NN(Token(LINE)))), NP(List(NNP(Token(FEED)))), NP(List(LBracket(Token(()), NNP(Token(LF)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+000)))), NP(List(NNP(Token(C)), NNP(Token(FORM)), NNP(Token(FEED)))), NP(List(LBracket(Token(()), NNP(Token(FF)), RBracket(Token())))), NP(List(NNP(Token(U)))), NP(List(CD(Token(+0020)))), VP(List(VP(List(VB(Token(SPACE)), SBAR(List(IN(Token(If)), S(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(appropriate)), NML(List(NN(Token(end)), NN(Token(tag)))), NN(Token(token)))))))))))), Comma(Token(,)), VP(List(ADVP(List(RB(Token(then)))), VB(Token(switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(PP(List(IN(Token(before)), NP(List(NN(Token(attribute)))))))), NN(Token(name)), NN(Token(state)))))))))), Dot(Token(.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise)))), Comma(Token(,)), VP(List(VB(Token(treat)), NP(List(PRP(Token(it)))), PP(List(IN(Token(as)), NP(List(NML(List(PP(List(IN(Token(per)), NP(List(DT(Token(the)), LDoubleQuote(Token(")), NN(Token(anything)), NN(Token(else)), RDoubleQuote(Token(")))))))), NN(Token(entry)))))), ADVP(List(RB(Token(below)))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)))), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), SBAR(List(IN(Token(If)), S(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(appropriate)), NML(List(NN(Token(end)), NN(Token(tag)))), NN(Token(token)))), Comma(Token(,)), ADVP(List(RB(Token(then)))))))))), VP(List(VBP(Token(switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(NN(Token(self)), HYPH(Token(-)), NN(Token(closing)))), NN(Token(start)), NN(Token(tag)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise)))), Comma(Token(,)), VP(List(VB(Token(treat)), NP(List(PRP(Token(it)))), PP(List(IN(Token(as)), NP(List(NML(List(PP(List(IN(Token(per)), NP(List(DT(Token(the)), LDoubleQuote(Token(")), NN(Token(anything)), NN(Token(else)), RDoubleQuote(Token(")))))))), NN(Token(entry)))))), ADVP(List(RB(Token(below)))))), Dot(Token(.))))))
ROOT(List(NP(List(FRAG(List(NP(List(NP(List(NNP(Token(U)), CD(Token(+003)), NN(Token(E)))), NP(List(NNP(Token(GREATER)), HYPH(Token(-)), NNP(Token(THAN)), NNP(Token(SIGN)))))), LBracket(Token(()), NP(List(NNP(Token(>)))), RBracket(Token())))), S(List(SBAR(List(IN(Token(If)), S(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(end)), NN(Token(tag)), NN(Token(token)))), VP(List(VBZ(Token(is)), NP(List(DT(Token(an)), JJ(Token(appropriate)), NML(List(NN(Token(end)), NN(Token(tag)))), NN(Token(token)))))))))), Comma(Token(,)), ADVP(List(RB(Token(then)))), VP(List(VP(List(VB(Token(switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(data)), NN(Token(state)))))))), CC(Token(and)), VP(List(VB(Token(emit)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)))))))))), Dot(Token(.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise)))), Comma(Token(,)), VP(List(VB(Token(treat)), NP(List(PRP(Token(it)))), PP(List(IN(Token(as)), NP(List(NML(List(PP(List(IN(Token(per)), NP(List(DT(Token(the)), LDoubleQuote(Token(")), NN(Token(anything)), NN(Token(else)), RDoubleQuote(Token(")))))))), NN(Token(entry)))))), ADVP(List(RB(Token(below)))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NNP(Token(ASCII)), JJ(Token(upper)), NN(Token(alpha)))), VP(List(VBD(Token(Append)), NP(List(NP(List(DT(Token(the)), NN(Token(lowercase)), NN(Token(version)))), PP(List(IN(Token(of)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))))))), PRN(List(LBracket(Token(()), S(List(VP(List(VB(Token(add)), NP(List(NNS(Token(0x0020)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), NN(Token(character)), POS(Token('s)))), NN(Token(code)), NN(Token(point)))))))))), RBracket(Token())))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))))))), Dot(Token(.))))))
ROOT(List(S(List(NP(List(NP(List(NNP(Token(ASCII)))), NP(List(JJR(Token(lower)), NN(Token(alpha)))))), VP(List(VBD(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(tag)), NN(Token(token)), POS(Token('s)))), NN(Token(tag)), NN(Token(name)))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Append)), NP(List(DT(Token(the)), JJ(Token(current)), NN(Token(input)), NN(Token(character)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))))))), Dot(Token(.))))))
RRC is not defined
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), null, Comma(Token(-)), PP(List(IN(Token(THAN)), NP(List(NP(List(JJ(Token(SIGN)), NN(Token(character)), NN(Token(token)))), Comma(Token(,)), NP(List(DT(Token(a)), NML(List(NNP(Token(U)), NNP(Token(+002)), NNP(Token(F)), NNP(Token(SOLIDUS)))), NN(Token(character)), NN(Token(token)))), Comma(Token(,)), CC(Token(and)), NP(List(DT(Token(a)), NN(Token(character)), NN(Token(token)))))))), PP(List(IN(Token(for)), NP(List(NP(List(DT(Token(each)))), PP(List(IN(Token(of)), NP(List(NP(List(DT(Token(the)), NNS(Token(characters)))), PP(List(IN(Token(in)), NP(List(NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))), LBracket(Token(()), PP(List(IN(Token(in)), NP(List(NP(List(DT(Token(the)), NN(Token(order)))), SBAR(List(S(List(NP(List(PRP(Token(they)))), VP(List(VBD(Token(were)), VP(List(VBN(Token(added)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(buffer)))))))))))))))))), RBracket(Token())))))))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), JJ(Token(RAWTEXT)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(NP(List(NP(List(NP(List(ADJP(List(ADJP(List(NP(List(CD(Token(12.2.5.15)), NNP(Token(Script)), NNS(Token(data)))), JJR(Token(less)))), HYPH(Token(-)), PP(List(IN(Token(than)), NP(List(NN(Token(sign)), NN(Token(state)))))))), NN(Token(Consume)))), NP(List(DT(Token(the)), JJ(Token(next)), NN(Token(input)), NN(Token(character)))))), Colon(Token(:)), NP(List(NP(List(NML(List(NN(Token(U)), CD(Token(+002)))), NN(Token(F)), NNS(Token(SOLIDUS)), PRN(List(LBracket(Token(()), NP(List(SYM(Token(/)))), RBracket(Token())))))), VP(List(VBN(Token(Set)), NP(List(DT(Token(the)), JJ(Token(temporary)), NN(Token(buffer)))), PP(List(IN(Token(to)), NP(List(DT(Token(the)), JJ(Token(empty)), NN(Token(string)))))))))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NML(List(NML(List(NN(Token(script)), NNS(Token(data)))), NN(Token(end)), NN(Token(tag)))), JJ(Token(open)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(FRAG(List(NN(Token(U)))), FRAG(List(NP(List(CD(Token(+0021)), NNP(Token(EXCLAMATION)), NNP(Token(MARK)))), LBracket(Token(()), NP(List(SYM(Token(!)))), RBracket(Token()))))))))
ROOT(List(S(List(VP(List(VB(Token(Switch)), PP(List(IN(Token(to)), NP(List(DT(Token(the)), NN(Token(script)), NN(Token(data)), NN(Token(escape)), NN(Token(start)), NN(Token(state)))))))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NP(List(NN(Token(token)))), CC(Token(and)), NP(List(DT(Token(a)), NN(Token(U)))))), NP(List(CD(Token(+0021)))), NP(List(NNP(Token(EXCLAMATION)), NNP(Token(MARK)))), NP(List(NN(Token(character)), NN(Token(token)))), Dot(Token(.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything)), RB(Token(else)))), NP(List(NNP(Token(Emit)))), NP(List(DT(Token(a)), NNP(Token(U)))), NP(List(CD(Token(+003)))), NP(List(NNP(Token(C)), NNP(Token(LESS)))), Colon(Token(-)), NP(List(NNP(Token(THAN)), NNP(Token(SIGN)))), NP(List(NN(Token(character)))), NP(List(NN(Token(token)))), Dot(Token(.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume)), PP(List(IN(Token(in)), NP(List(DT(Token(the)), NML(List(NN(Token(script)), NN(Token(data)))), NN(Token(state)))))))), Dot(Token(.))))))
