36 : Attribute_value_double_quoted_state
-- chara: U+0022 QUOTATION MARK (") --
Switch to the after attribute value (quoted) state.
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Switch,switch)), Node(PP,List(Leaf(IN,Token(to,to)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(after_attribute_value_quoted_state,after_attribute_value_quoted_state)))))))), Leaf(Dot,Token(.,.))))))

 -> Switch(the_after_attribute_value_quoted_state)

-- chara: U+0026 AMPERSAND (&amp;) --
Set the return state to the attribute value (double-quoted) state. Switch to the character reference state.
List()
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Set,set)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(return,return)), Leaf(NN,Token(state,state)))), Node(PP,List(Leaf(IN,Token(to,to)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(attribute_value_double_quoted_state,attribute_value_double_quoted_state)))))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Switch,switch)), Node(PP,List(Leaf(IN,Token(to,to)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(character_reference_state,character_reference_state)))))))), Leaf(Dot,Token(.,.))))))

 -> Set(the_return_state,the_attribute_value_double_quoted_state)
 -> Switch(the_character_reference_state)

-- chara: U+0000 NULL --
This is an unexpected-null-character parse error. Append a U+FFFD REPLACEMENT CHARACTER character to the current attribute's value.
List()
List()
Node(ROOT,List(Node(S,List(Node(NP,List(Leaf(DT,Token(This,this)))), Node(VP,List(Leaf(VB,Token(is,be)), Node(NP,List(Leaf(DT,Token(an,a)), Node(NML,List(Node(ADJP,List(Leaf(JJ,Token(unexpected,unexpected)), Leaf(HYPH,Token(-,-)), Leaf(JJ,Token(null,null)))), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(character,character)))), Leaf(NN,Token(parse,parse)), Leaf(NN,Token(error,error)))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Append,append)), Node(NP,List(Leaf(DT,Token(a,a)), Leaf(JJ,Token(UPFFFD,UPFFFD)), Node(NML,List(Leaf(NN,Token(REPLACEMENT,REPLACEMENT)), Leaf(NN,Token(CHARACTER,CHARACTER)))), Leaf(NN,Token(character,character)))), Node(PP,List(Leaf(IN,Token(to,to)), Node(NP,List(Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(current,current)), Leaf(NN,Token(attribute,attribute)), Leaf(POS,Token('s,'s)))), Leaf(NN,Token(value,value)))))))), Leaf(Dot,Token(.,.))))))

 -> Error(an_unexpected_-_null_-_character_parse_error)
 -> Append(List (a_UPFFFD_REPLACEMENT_CHARACTER_character, ),the_current_attribute_'s_value)

-- chara: EOF --
This is an eof-in-tag parse error. Emit an end-of-file token.
List()
List()
Node(ROOT,List(Node(S,List(Node(NP,List(Leaf(DT,Token(This,this)))), Node(VP,List(Leaf(VB,Token(is,be)), Node(NP,List(Leaf(DT,Token(an,a)), Node(NML,List(Leaf(NN,Token(eof,eof)), Leaf(HYPH,Token(-,-)), Leaf(IN,Token(in,in)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(tag,tag)))), Leaf(NN,Token(parse,parse)), Leaf(NN,Token(error,error)))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Emit,emit)), Node(NP,List(Leaf(DT,Token(an,a)), Node(NML,List(Node(NML,List(Leaf(NN,Token(end,end)))), Leaf(HYPH,Token(-,-)), Node(PP,List(Leaf(IN,Token(of,of)), Leaf(HYPH,Token(-,-)), Node(NP,List(Leaf(NN,Token(file,file)))))))), Leaf(NN,Token(token,token)))))), Leaf(Dot,Token(.,.))))))

 -> Error(an_eof_-_in_-_tag_parse_error)
 -> Emit(List (an_end_-_of_-_file_token, ))

-- chara: Anything else --
Append the current input character to the current attribute's value.
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Append,append)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(current,current)), Leaf(NN,Token(input,input)), Leaf(NN,Token(character,character)))), Node(PP,List(Leaf(IN,Token(to,to)), Node(NP,List(Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(current,current)), Leaf(NN,Token(attribute,attribute)), Leaf(POS,Token('s,'s)))), Leaf(NN,Token(value,value)))))))), Leaf(Dot,Token(.,.))))))

 -> Append(List (the_current_input_character, ),the_current_attribute_'s_value)

