ROOT(List(S(List(S(List(NP(List(CD(Token(12.2.5.1,12.2.5.1)), NNP(Token(Data,Data)), NN(Token(state,state)))), VP(List(VBD(Token(Consume,consume)), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))))), Colon(Token(:,:)), S(List(NP(List(NNP(Token(U,u)), CD(Token(+0026,+0026)))), VP(List(VBD(Token(AMPERSAND,ampersand)), S(List(LBracket(Token((,()), NP(List(CC(Token(&,&)))), RBracket(Token(),))), VP(List(VB(Token(Set,set)), NP(List(DT(Token(the,the)), NN(Token(return,return)), NN(Token(state,state)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(data,datum)), NN(Token(state,state)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(character,character)), NN(Token(reference,reference)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NML(List(NN(Token(U,u)), CD(Token(+003,+003)))), NNP(Token(C,c)), NNP(Token(LESS,less)))), Comma(Token(-,-)), PP(List(IN(Token(THAN,than)), NP(List(NP(List(NNP(Token(SIGN,sign)))), LBracket(Token((,()), VP(List(SYM(Token(<,<)), NP(List(NN(Token(),))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(tag,tag)), JJ(Token(open,open)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+0000,+0000)))), NNP(Token(NULL,null)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(ADJP(List(JJ(Token(unexpected,unexpected)), HYPH(Token(-,-)), JJ(Token(null,null)))), HYPH(Token(-,-)), NN(Token(character,character)))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(as,as)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF,eof)), NNP(Token(Emit,emit)))), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(as,as)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(S(List(NP(List(CD(Token(12.2.5.2,12.2.5.2)), NNP(Token(RCDATA,RCDATA)), NN(Token(state,state)))), VP(List(VBD(Token(Consume,consume)), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))))), Colon(Token(:,:)), S(List(NP(List(NNP(Token(U,u)), CD(Token(+0026,+0026)))), VP(List(VBD(Token(AMPERSAND,ampersand)), S(List(LBracket(Token((,()), NP(List(CC(Token(&,&)))), RBracket(Token(),))), VP(List(VB(Token(Set,set)), NP(List(DT(Token(the,the)), NN(Token(return,return)), NN(Token(state,state)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)), NN(Token(state,state)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(character,character)), NN(Token(reference,reference)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NML(List(NN(Token(U,u)), CD(Token(+003,+003)))), NNP(Token(C,c)), NNP(Token(LESS,less)))), Comma(Token(-,-)), PP(List(IN(Token(THAN,than)), NP(List(NP(List(NNP(Token(SIGN,sign)))), LBracket(Token((,()), VP(List(SYM(Token(<,<)), NP(List(NN(Token(),))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)))), ADJP(List(ADJP(List(JJR(Token(less,less)))), HYPH(Token(-,-)), PP(List(IN(Token(than,than)), NP(List(NN(Token(sign,sign)), NN(Token(state,state)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+0000,+0000)))), NNP(Token(NULL,null)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(ADJP(List(JJ(Token(unexpected,unexpected)), HYPH(Token(-,-)), JJ(Token(null,null)))), HYPH(Token(-,-)), NN(Token(character,character)))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), JJ(Token(U+FFFD,U+FFFD)), NNP(Token(REPLACEMENT,REPLACEMENT)), NNP(Token(CHARACTER,CHARACTER)), NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF,eof)), NNP(Token(Emit,emit)))), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(as,as)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), Dot(Token(.,.))))))
GW is not defined
GW is not defined
ROOT(List(FRAG(List(NP(List(CD(Token(12.2.5.3,12.2.5.3)), NNP(Token(RAWTEXT,RAWTEXT)), NN(Token(state,state)))), NP(List(NNP(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,sign)))), NP(List(null)), LBracket(Token(<,<)), NP(List(null)), ADJP(List(JJ(Token(Switch,switch)), PP(List(IN(Token(to,to)), ADVP(List(NP(List(DT(Token(the,the)), NN(Token(RAWTEXT,RAWTEXT)))), RBR(Token(less,less)))))), Comma(Token(-,-)), PP(List(IN(Token(than,than)), NP(List(NN(Token(sign,sign)))))))), NP(List(NN(Token(state,state)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+0000,+0000)))), NNP(Token(NULL,null)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(ADJP(List(JJ(Token(unexpected,unexpected)), HYPH(Token(-,-)), JJ(Token(null,null)))), HYPH(Token(-,-)), NN(Token(character,character)))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), JJ(Token(U+FFFD,U+FFFD)), NNP(Token(REPLACEMENT,REPLACEMENT)), NNP(Token(CHARACTER,CHARACTER)), NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF,eof)), NNP(Token(Emit,emit)))), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(as,as)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), Dot(Token(.,.))))))
GW is not defined
GW is not defined
ROOT(List(FRAG(List(NP(List(CD(Token(12.2.5.4,12.2.5.4)))), NP(List(NNP(Token(Script,script)))), NP(List(NNS(Token(data,datum)))), NP(List(NN(Token(state,state)))), NP(List(NNP(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,sign)))), NP(List(null)), LBracket(Token(<,<)), NP(List(null)), ADJP(List(JJ(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), NN(Token(script,script)), NNS(Token(data,datum)))), ADJP(List(ADJP(List(JJR(Token(less,less)))), HYPH(Token(-,-)), PP(List(IN(Token(than,than)), NP(List(NN(Token(sign,sign)))))))))))))), NP(List(NN(Token(state,state)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+0000,+0000)))), NNP(Token(NULL,null)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(ADJP(List(JJ(Token(unexpected,unexpected)), HYPH(Token(-,-)), JJ(Token(null,null)))), HYPH(Token(-,-)), NN(Token(character,character)))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), JJ(Token(U+FFFD,U+FFFD)), NNP(Token(REPLACEMENT,REPLACEMENT)), NNP(Token(CHARACTER,CHARACTER)), NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF,eof)), NNP(Token(Emit,emit)))), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(as,as)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(FRAG(List(NP(List(CD(Token(12.2.5.5,12.2.5.5)), NML(List(NN(Token(PLAINTEXT,plaintext)), NN(Token(state,state)))), NNP(Token(Consume,consume)))), NP(List(NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), NP(List(NNP(Token(U,U)), NNP(Token(+0000,+0000)), NNP(Token(NULL,null)))))))), S(List(NP(List(DT(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(ADJP(List(JJ(Token(unexpected,unexpected)), HYPH(Token(-,-)), JJ(Token(null,null)))), HYPH(Token(-,-)), NN(Token(character,character)))), NN(Token(parse,parse)), NN(Token(error,error)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), JJ(Token(U+FFFD,U+FFFD)), NNP(Token(REPLACEMENT,REPLACEMENT)), NNP(Token(CHARACTER,CHARACTER)), NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(EOF,eof)), NNP(Token(Emit,emit)))), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(as,as)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), Dot(Token(.,.))))))
GW is not defined
ROOT(List(FRAG(List(NP(List(CD(Token(12.2.5.6,12.2.5.6)), NN(Token(Tag,tag)))), NP(List(JJ(Token(open,open)), NN(Token(state,state)))), NP(List(NNP(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0021,+0021)))), NP(List(NNP(Token(EXCLAMATION,EXCLAMATION)), NNP(Token(MARK,MARK)))), NP(List(null)), Dot(Token(!,!)), RBracket(Token(),)))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), ADJP(List(NP(List(NN(Token(markup,markup)), NN(Token(declaration,declaration)))), JJ(Token(open,open)))), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)))), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), JJ(Token(open,open)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(NNP(Token(ASCII,ASCII)), NN(Token(alpha,alpha)))), VP(List(VP(List(VB(Token(Create,create)), NP(List(DT(Token(a,a)), JJ(Token(new,new)), NN(Token(start,start)), NN(Token(tag,tag)), NN(Token(token,token)))))), Comma(Token(,,,)), VP(List(VB(Token(set,set)), NP(List(null, NN(Token(tag,tag)), NN(Token(name,name)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NN(Token(tag,tag)), NN(Token(name,name)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
GW is not defined
ROOT(List(FRAG(List(NP(List(NNP(Token(U,U)), CD(Token(+003,+003)))), NP(List(NNP(Token(F,F)), NNP(Token(QUESTION,QUESTION)), NNP(Token(MARK,MARK)))), NP(List(null)), Dot(Token(?,?)), RBracket(Token(),)))))))
ROOT(List(S(List(NP(List(DT(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(unexpected,unexpected)), NML(List(PP(List(SYM(Token(-,-)), NP(List(NN(Token(question,question)), HYPH(Token(-,-)), NN(Token(mark,mark)))))), HYPH(Token(-,-)), PP(List(ADVP(List(RB(Token(instead,instead)))), HYPH(Token(-,-)), IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(tag,tag)), HYPH(Token(-,-)), NN(Token(name,name)))))))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Create,create)), NP(List(NP(List(DT(Token(a,a)), NN(Token(comment,comment)), NN(Token(token,token)))), SBAR(List(WHNP(List(WPD(Token(whose,whose)), NML(List(NNS(Token(data,datum)))))), S(List(VP(List(VBZ(Token(is,be)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), JJ(Token(bogus,bogus)), NN(Token(comment,comment)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NNP(Token(EOF,EOF)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(eof,eof)))), HYPH(Token(-,-)), PP(List(IN(Token(before,before)), HYPH(Token(-,-)), NP(List(NN(Token(tag,tag)), HYPH(Token(-,-)), NN(Token(name,name)))))))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit,emit)), NP(List(NP(List(DT(Token(a,a)), NML(List(NML(List(NNP(Token(U,u)), NNP(Token(+003,+003)), NNP(Token(C,c)), NNP(Token(LESS,less)))), HYPH(Token(-,-)), NML(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))))), NN(Token(character,character)), NN(Token(token,token)))), CC(Token(and,and)), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(DT(Token(This,this)))))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(NML(List(ADJP(List(JJ(Token(invalid,invalid)), HYPH(Token(-,-)), JJ(Token(first,first)))), HYPH(Token(-,-)), NN(Token(character,character)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(tag,tag)), HYPH(Token(-,-)), NN(Token(name,name)))))))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NN(Token(data,datum)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(CD(Token(12.2.5.7,12.2.5.7)), NML(List(NN(Token(End,end)), NN(Token(tag,tag)))), NN(Token(open,open)), NN(Token(state,state)))), VP(List(VBD(Token(Consume,consume)), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), S(List(NP(List(NNP(Token(ASCII,ASCII)), NN(Token(alpha,alpha)))), VP(List(VP(List(VB(Token(Create,create)), NP(List(DT(Token(a,a)), JJ(Token(new,new)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))))), Comma(Token(,,,)), VP(List(VB(Token(set,set)), NP(List(null, NN(Token(tag,tag)), NN(Token(name,name)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NN(Token(tag,tag)), NN(Token(name,name)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+003,+003)))), NNP(Token(E,e)), NNP(Token(GREATER,greater)), HYPH(Token(-,-)), NNP(Token(THAN,than)))), VP(List(VBP(Token(SIGN,sign)), NP(List(NP(List(LBracket(Token((,()), NNP(Token(>,>)), RBracket(Token(),))))), SBAR(List(S(List(NP(List(DT(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(a,a)), ADJP(List(JJ(Token(missing,missing)), HYPH(Token(-,-)), NN(Token(end,end)))), HYPH(Token(-,-)), NML(List(NN(Token(tag,tag)), HYPH(Token(-,-)), NN(Token(name,name)))), NNS(Token(parse,parse)), NN(Token(error,error)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(data,datum)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NNP(Token(EOF,EOF)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(eof,eof)))), HYPH(Token(-,-)), PP(List(IN(Token(before,before)), HYPH(Token(-,-)), NP(List(NN(Token(tag,tag)), HYPH(Token(-,-)), NN(Token(name,name)))))))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit,emit)), NP(List(NP(List(DT(Token(a,a)), NML(List(NML(List(NNP(Token(U,U)), NNP(Token(+003,+003)), NNP(Token(C,c)), NNP(Token(LESS,less)))), HYPH(Token(-,-)), NML(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))))), NN(Token(character,character)), NN(Token(token,token)))), Comma(Token(,,,)), NP(List(DT(Token(a,a)), NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)), NNP(Token(SOLIDUS,SOLIDUS)))), NN(Token(character,character)), NN(Token(token,token)))), CC(Token(and,and)), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(DT(Token(This,this)))))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(NML(List(ADJP(List(JJ(Token(invalid,invalid)), HYPH(Token(-,-)), JJ(Token(first,first)))), HYPH(Token(-,-)), NN(Token(character,character)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(tag,tag)), HYPH(Token(-,-)), NN(Token(name,name)))))))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Create,create)), NP(List(NP(List(DT(Token(a,a)), NN(Token(comment,comment)), NN(Token(token,token)))), SBAR(List(WHNP(List(WPD(Token(whose,whose)), NML(List(NNS(Token(data,datum)))))), S(List(VP(List(VBZ(Token(is,be)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), JJ(Token(bogus,bogus)), NN(Token(comment,comment)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NP(List(CD(Token(12.2.5.8,12.2.5.8)), NN(Token(Tag,tag)))), NP(List(NN(Token(name,name)), NN(Token(state,state)))), NP(List(NNP(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))), Comma(Token(:,:)), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0009,+0009)))), NP(List(NNP(Token(CHARACTER,character)), NNP(Token(TABULATION,tabulation)))), NP(List(LBracket(Token((,()), NN(Token(tab,tab)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+000,+000)))), NP(List(DT(Token(A,a)), NN(Token(LINE,line)))), NP(List(NNP(Token(FEED,feed)))), NP(List(LBracket(Token((,()), NNP(Token(LF,lf)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+000,+000)))), NP(List(NNP(Token(C,c)), NNP(Token(FORM,form)), NNP(Token(FEED,feed)))), NP(List(LBracket(Token((,()), NNP(Token(FF,ff)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0020,+0020)))), NP(List(NNP(Token(SPACE,space)))), VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(PP(List(IN(Token(before,before)), NP(List(NN(Token(attribute,attribute)))))))), NN(Token(name,name)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)))), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(NN(Token(self,self)), HYPH(Token(-,-)), NN(Token(closing,closing)))), NN(Token(start,start)), NN(Token(tag,tag)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(U,U)), NML(List(CD(Token(+003,+003)), NN(Token(E,e)))), NNP(Token(GREATER,greater)))), Comma(Token(-,-)), PP(List(IN(Token(THAN,than)), NP(List(NNP(Token(SIGN,sign)), LBracket(Token((,()), NNP(Token(>,>)), RBracket(Token(),))), NNP(Token(Switch,switch)))))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(data,datum)), NN(Token(state,state)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NNP(Token(ASCII,ASCII)), JJ(Token(upper,upper)), NN(Token(alpha,alpha)))), VP(List(VBD(Token(Append,append)), NP(List(NP(List(DT(Token(the,the)), NN(Token(lowercase,lowercase)), NN(Token(version,version)))), PP(List(IN(Token(of,of)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))))))), PRN(List(LBracket(Token((,()), S(List(VP(List(VB(Token(add,add)), NP(List(NNS(Token(0x0020,0x0020)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), NN(Token(character,character)), POS(Token('s,'s)))), NN(Token(code,code)), NN(Token(point,point)))))))))), RBracket(Token(),))))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+0000,+0000)))), NNP(Token(NULL,null)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(ADJP(List(JJ(Token(unexpected,unexpected)), HYPH(Token(-,-)), JJ(Token(null,null)))), HYPH(Token(-,-)), NN(Token(character,character)))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Append,append)), NP(List(DT(Token(a,a)), NNP(Token(U+FFFD,U+FFFD)), NNP(Token(REPLACEMENT,REPLACEMENT)), NNP(Token(CHARACTER,CHARACTER)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NNP(Token(EOF,EOF)), NNP(Token(This,this)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), NML(List(NN(Token(eof,eof)), HYPH(Token(-,-)), IN(Token(in,in)), HYPH(Token(-,-)), NN(Token(tag,tag)))), NN(Token(parse,parse)), NN(Token(error,error)))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Emit,emit)), NP(List(DT(Token(an,a)), NML(List(NML(List(NN(Token(end,end)))), HYPH(Token(-,-)), PP(List(IN(Token(of,of)), HYPH(Token(-,-)), NP(List(NN(Token(file,file)))))))), NN(Token(token,token)))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), VP(List(VBD(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(NP(List(NP(List(NP(List(ADJP(List(ADJP(List(NP(List(CD(Token(12.2.5.9,12.2.5.9)), NN(Token(RCDATA,RCDATA)))), JJR(Token(less,less)))), HYPH(Token(-,-)), PP(List(IN(Token(than,than)), NP(List(NN(Token(sign,sign)), NN(Token(state,state)))))))), NN(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))), Colon(Token(:,:)), NP(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+002,+002)))), NN(Token(F,F)), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), VP(List(VBN(Token(Set,set)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)), NN(Token(end,end)), NN(Token(tag,tag)))))), NP(List(JJ(Token(open,open)), NN(Token(state,state)))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(CD(Token(12.2.5.10,12.2.5.10)), NML(List(NNP(Token(RCDATA,rcdata)), NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(open,open)), NN(Token(state,state)))), VP(List(VBD(Token(Consume,consume)), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), S(List(NP(List(NNP(Token(ASCII,ASCII)), NN(Token(alpha,alpha)))), VP(List(VP(List(VB(Token(Create,create)), NP(List(DT(Token(a,a)), JJ(Token(new,new)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))))), Comma(Token(,,,)), VP(List(VB(Token(set,set)), NP(List(null, NN(Token(tag,tag)), NN(Token(name,name)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(name,name)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NP(List(NN(Token(token,token)))), CC(Token(and,and)), NP(List(DT(Token(a,a)), NN(Token(U,u)))))), NP(List(CD(Token(+002,+002)))), NP(List(NNP(Token(F,F)), NNP(Token(SOLIDUS,SOLIDUS)))), NP(List(NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NP(List(CD(Token(12.2.5.11,12.2.5.11)))), NP(List(NN(Token(RCDATA,rcdata)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(name,name)), NN(Token(state,state)), NN(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))), Comma(Token(:,:)), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0009,+0009)))), NP(List(NNP(Token(CHARACTER,character)), NNP(Token(TABULATION,tabulation)))), NP(List(LBracket(Token((,()), NN(Token(tab,tab)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+000,+000)))), NP(List(DT(Token(A,a)), NN(Token(LINE,line)))), NP(List(NNP(Token(FEED,feed)))), NP(List(LBracket(Token((,()), NNP(Token(LF,lf)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+000,+000)))), NP(List(NNP(Token(C,c)), NNP(Token(FORM,form)), NNP(Token(FEED,feed)))), NP(List(LBracket(Token((,()), NNP(Token(FF,ff)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0020,+0020)))), VP(List(VP(List(VB(Token(SPACE,space)), SBAR(List(IN(Token(If,if)), S(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(appropriate,appropriate)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(token,token)))))))))))), Comma(Token(,,,)), VP(List(ADVP(List(RB(Token(then,then)))), VB(Token(switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(PP(List(IN(Token(before,before)), NP(List(NN(Token(attribute,attribute)))))))), NN(Token(name,name)), NN(Token(state,state)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise,otherwise)))), Comma(Token(,,,)), VP(List(VB(Token(treat,treat)), NP(List(PRP(Token(it,it)))), PP(List(IN(Token(as,as)), NP(List(NML(List(PP(List(IN(Token(per,per)), NP(List(DT(Token(the,the)), LDoubleQuote(Token(",")), NN(Token(anything,anything)), NN(Token(else,else)), RDoubleQuote(Token(",")))))))), NN(Token(entry,entry)))))), ADVP(List(RB(Token(below,below)))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)))), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), SBAR(List(IN(Token(If,if)), S(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(appropriate,appropriate)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(token,token)))), Comma(Token(,,,)), ADVP(List(RB(Token(then,then)))))))))), VP(List(VBP(Token(switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(NN(Token(self,self)), HYPH(Token(-,-)), NN(Token(closing,closing)))), NN(Token(start,start)), NN(Token(tag,tag)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise,otherwise)))), Comma(Token(,,,)), VP(List(VB(Token(treat,treat)), NP(List(PRP(Token(it,it)))), PP(List(IN(Token(as,as)), NP(List(NML(List(PP(List(IN(Token(per,per)), NP(List(DT(Token(the,the)), LDoubleQuote(Token(",")), NN(Token(anything,anything)), NN(Token(else,else)), RDoubleQuote(Token(",")))))))), NN(Token(entry,entry)))))), ADVP(List(RB(Token(below,below)))))), Dot(Token(.,.))))))
ROOT(List(NP(List(FRAG(List(NP(List(NP(List(NNP(Token(U,U)), CD(Token(+003,+003)), NN(Token(E,e)))), NP(List(NNP(Token(GREATER,greater)), HYPH(Token(-,-)), NNP(Token(THAN,than)), NNP(Token(SIGN,sign)))))), LBracket(Token((,()), NP(List(NNP(Token(>,>)))), RBracket(Token(),))))), S(List(SBAR(List(IN(Token(If,if)), S(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(appropriate,appropriate)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(token,token)))))))))), Comma(Token(,,,)), ADVP(List(RB(Token(then,then)))), VP(List(VP(List(VB(Token(switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(data,datum)), NN(Token(state,state)))))))), CC(Token(and,and)), VP(List(VB(Token(emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise,otherwise)))), Comma(Token(,,,)), VP(List(VB(Token(treat,treat)), NP(List(PRP(Token(it,it)))), PP(List(IN(Token(as,as)), NP(List(NML(List(PP(List(IN(Token(per,per)), NP(List(DT(Token(the,the)), LDoubleQuote(Token(",")), NN(Token(anything,anything)), NN(Token(else,else)), RDoubleQuote(Token(",")))))))), NN(Token(entry,entry)))))), ADVP(List(RB(Token(below,below)))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NNP(Token(ASCII,ASCII)), JJ(Token(upper,upper)), NN(Token(alpha,alpha)))), VP(List(VBD(Token(Append,append)), NP(List(NP(List(DT(Token(the,the)), NN(Token(lowercase,lowercase)), NN(Token(version,version)))), PP(List(IN(Token(of,of)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))))))), PRN(List(LBracket(Token((,()), S(List(VP(List(VB(Token(add,add)), NP(List(NNS(Token(0x0020,0x0020)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), NN(Token(character,character)), POS(Token('s,'s)))), NN(Token(code,code)), NN(Token(point,point)))))))))), RBracket(Token(),))))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NP(List(NNP(Token(ASCII,ascii)))), NP(List(JJR(Token(lower,lower)), NN(Token(alpha,alpha)))))), VP(List(VBD(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))))))), Dot(Token(.,.))))))
RRC is not defined
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), null, Comma(Token(-,-)), PP(List(IN(Token(THAN,than)), NP(List(NP(List(JJ(Token(SIGN,SIGN)), NN(Token(character,character)), NN(Token(token,token)))), Comma(Token(,,,)), NP(List(DT(Token(a,a)), NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)), NNP(Token(SOLIDUS,SOLIDUS)))), NN(Token(character,character)), NN(Token(token,token)))), Comma(Token(,,,)), CC(Token(and,and)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), PP(List(IN(Token(for,for)), NP(List(NP(List(DT(Token(each,each)))), PP(List(IN(Token(of,of)), NP(List(NP(List(DT(Token(the,the)), NNS(Token(characters,character)))), PP(List(IN(Token(in,in)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))), LBracket(Token((,()), PP(List(IN(Token(in,in)), NP(List(NP(List(DT(Token(the,the)), NN(Token(order,order)))), SBAR(List(S(List(NP(List(PRP(Token(they,they)))), VP(List(VBD(Token(were,be)), VP(List(VBN(Token(added,add)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(buffer,buffer)))))))))))))))))), RBracket(Token(),))))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NNP(Token(RCDATA,RCDATA)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(CD(Token(12.2.5.12,12.2.5.12)), JJ(Token(RAWTEXT,RAWTEXT)), ADJP(List(ADJP(List(JJR(Token(less,less)))), HYPH(Token(-,-)), PP(List(IN(Token(than,than)), NP(List(NN(Token(sign,sign)))))))), NN(Token(state,state)))), VP(List(VBD(Token(Consume,consume)), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), S(List(NP(List(NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)))), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), VP(List(VB(Token(Set,set)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(RAWTEXT,rawtext)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), JJ(Token(open,open)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), JJ(Token(RAWTEXT,rawtext)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
PRP$ is not defined
ROOT(List(S(List(NP(List(CD(Token(12.2.5.13,12.2.5.13)), JJ(Token(RAWTEXT,rawtext)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), JJ(Token(open,open)), NN(Token(state,state)))), VP(List(VBD(Token(Consume,consume)), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))), Colon(Token(:,:)), S(List(NP(List(NNP(Token(ASCII,ASCII)), NN(Token(alpha,alpha)))), VP(List(VP(List(VB(Token(Create,create)), NP(List(DT(Token(a,a)), JJ(Token(new,new)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))))), Comma(Token(,,,)), VP(List(VB(Token(set,set)), NP(List(null, NN(Token(tag,tag)), NN(Token(name,name)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NNP(Token(RAWTEXT,rawtext)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(name,name)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NP(List(NN(Token(token,token)))), CC(Token(and,and)), NP(List(DT(Token(a,a)), NN(Token(U,u)))))), NP(List(CD(Token(+002,+002)))), NP(List(NNP(Token(F,F)), NNP(Token(SOLIDUS,SOLIDUS)))), NP(List(NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), JJ(Token(RAWTEXT,rawtext)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NP(List(CD(Token(12.2.5.14,12.2.5.14)))), NP(List(NN(Token(RAWTEXT,rawtext)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(name,name)), NN(Token(state,state)), NN(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))), Comma(Token(:,:)), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0009,+0009)))), NP(List(NNP(Token(CHARACTER,character)), NNP(Token(TABULATION,tabulation)))), NP(List(LBracket(Token((,()), NN(Token(tab,tab)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+000,+000)))), NP(List(DT(Token(A,a)), NN(Token(LINE,line)))), NP(List(NNP(Token(FEED,feed)))), NP(List(LBracket(Token((,()), NNP(Token(LF,lf)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+000,+000)))), NP(List(NNP(Token(C,c)), NNP(Token(FORM,form)), NNP(Token(FEED,feed)))), NP(List(LBracket(Token((,()), NNP(Token(FF,ff)), RBracket(Token(),))))), NP(List(NNP(Token(U,u)))), NP(List(CD(Token(+0020,+0020)))), VP(List(VP(List(VB(Token(SPACE,space)), SBAR(List(IN(Token(If,if)), S(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(appropriate,appropriate)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(token,token)))))))))))), Comma(Token(,,,)), VP(List(ADVP(List(RB(Token(then,then)))), VB(Token(switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(PP(List(IN(Token(before,before)), NP(List(NN(Token(attribute,attribute)))))))), NN(Token(name,name)), NN(Token(state,state)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise,otherwise)))), Comma(Token(,,,)), VP(List(VB(Token(treat,treat)), NP(List(PRP(Token(it,it)))), PP(List(IN(Token(as,as)), NP(List(NML(List(PP(List(IN(Token(per,per)), NP(List(DT(Token(the,the)), LDoubleQuote(Token(",")), NN(Token(anything,anything)), NN(Token(else,else)), RDoubleQuote(Token(",")))))))), NN(Token(entry,entry)))))), ADVP(List(RB(Token(below,below)))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)))), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), SBAR(List(IN(Token(If,if)), S(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(appropriate,appropriate)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(token,token)))), Comma(Token(,,,)), ADVP(List(RB(Token(then,then)))))))))), VP(List(VBP(Token(switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(NN(Token(self,self)), HYPH(Token(-,-)), NN(Token(closing,closing)))), NN(Token(start,start)), NN(Token(tag,tag)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise,otherwise)))), Comma(Token(,,,)), VP(List(VB(Token(treat,treat)), NP(List(PRP(Token(it,it)))), PP(List(IN(Token(as,as)), NP(List(NML(List(PP(List(IN(Token(per,per)), NP(List(DT(Token(the,the)), LDoubleQuote(Token(",")), NN(Token(anything,anything)), NN(Token(else,else)), RDoubleQuote(Token(",")))))))), NN(Token(entry,entry)))))), ADVP(List(RB(Token(below,below)))))), Dot(Token(.,.))))))
ROOT(List(NP(List(FRAG(List(NP(List(NP(List(NNP(Token(U,U)), CD(Token(+003,+003)), NN(Token(E,e)))), NP(List(NNP(Token(GREATER,greater)), HYPH(Token(-,-)), NNP(Token(THAN,than)), NNP(Token(SIGN,sign)))))), LBracket(Token((,()), NP(List(NNP(Token(>,>)))), RBracket(Token(),))))), S(List(SBAR(List(IN(Token(If,if)), S(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(end,end)), NN(Token(tag,tag)), NN(Token(token,token)))), VP(List(VBZ(Token(is,be)), NP(List(DT(Token(an,a)), JJ(Token(appropriate,appropriate)), NML(List(NN(Token(end,end)), NN(Token(tag,tag)))), NN(Token(token,token)))))))))), Comma(Token(,,,)), ADVP(List(RB(Token(then,then)))), VP(List(VP(List(VB(Token(switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(data,datum)), NN(Token(state,state)))))))), CC(Token(and,and)), VP(List(VB(Token(emit,emit)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(ADVP(List(RB(Token(Otherwise,otherwise)))), Comma(Token(,,,)), VP(List(VB(Token(treat,treat)), NP(List(PRP(Token(it,it)))), PP(List(IN(Token(as,as)), NP(List(NML(List(PP(List(IN(Token(per,per)), NP(List(DT(Token(the,the)), LDoubleQuote(Token(",")), NN(Token(anything,anything)), NN(Token(else,else)), RDoubleQuote(Token(",")))))))), NN(Token(entry,entry)))))), ADVP(List(RB(Token(below,below)))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NNP(Token(ASCII,ASCII)), JJ(Token(upper,upper)), NN(Token(alpha,alpha)))), VP(List(VBD(Token(Append,append)), NP(List(NP(List(DT(Token(the,the)), NN(Token(lowercase,lowercase)), NN(Token(version,version)))), PP(List(IN(Token(of,of)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))))))), PRN(List(LBracket(Token((,()), S(List(VP(List(VB(Token(add,add)), NP(List(NNS(Token(0x0020,0x0020)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), NN(Token(character,character)), POS(Token('s,'s)))), NN(Token(code,code)), NN(Token(point,point)))))))))), RBracket(Token(),))))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(NP(List(NP(List(NNP(Token(ASCII,ascii)))), NP(List(JJR(Token(lower,lower)), NN(Token(alpha,alpha)))))), VP(List(VBD(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(tag,tag)), NN(Token(token,token)), POS(Token('s,'s)))), NN(Token(tag,tag)), NN(Token(name,name)))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Append,append)), NP(List(DT(Token(the,the)), JJ(Token(current,current)), NN(Token(input,input)), NN(Token(character,character)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))))))), Dot(Token(.,.))))))
RRC is not defined
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), null, Comma(Token(-,-)), PP(List(IN(Token(THAN,than)), NP(List(NP(List(JJ(Token(SIGN,SIGN)), NN(Token(character,character)), NN(Token(token,token)))), Comma(Token(,,,)), NP(List(DT(Token(a,a)), NML(List(NNP(Token(U,U)), NNP(Token(+002,+002)), NNP(Token(F,F)), NNP(Token(SOLIDUS,SOLIDUS)))), NN(Token(character,character)), NN(Token(token,token)))), Comma(Token(,,,)), CC(Token(and,and)), NP(List(DT(Token(a,a)), NN(Token(character,character)), NN(Token(token,token)))))))), PP(List(IN(Token(for,for)), NP(List(NP(List(DT(Token(each,each)))), PP(List(IN(Token(of,of)), NP(List(NP(List(DT(Token(the,the)), NNS(Token(characters,character)))), PP(List(IN(Token(in,in)), NP(List(NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))), LBracket(Token((,()), PP(List(IN(Token(in,in)), NP(List(NP(List(DT(Token(the,the)), NN(Token(order,order)))), SBAR(List(S(List(NP(List(PRP(Token(they,they)))), VP(List(VBD(Token(were,be)), VP(List(VBN(Token(added,add)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(buffer,buffer)))))))))))))))))), RBracket(Token(),))))))))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), JJ(Token(RAWTEXT,rawtext)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(NP(List(NP(List(NP(List(ADJP(List(ADJP(List(NP(List(CD(Token(12.2.5.15,12.2.5.15)), NNP(Token(Script,script)), NNS(Token(data,datum)))), JJR(Token(less,less)))), HYPH(Token(-,-)), PP(List(IN(Token(than,than)), NP(List(NN(Token(sign,sign)), NN(Token(state,state)))))))), NN(Token(Consume,consume)))), NP(List(DT(Token(the,the)), JJ(Token(next,next)), NN(Token(input,input)), NN(Token(character,character)))))), Colon(Token(:,:)), NP(List(NP(List(NML(List(NN(Token(U,U)), CD(Token(+002,+002)))), NN(Token(F,F)), NNS(Token(SOLIDUS,SOLIDUS)), PRN(List(LBracket(Token((,()), NP(List(SYM(Token(/,/)))), RBracket(Token(),))))))), VP(List(VBN(Token(Set,set)), NP(List(DT(Token(the,the)), JJ(Token(temporary,temporary)), NN(Token(buffer,buffer)))), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), JJ(Token(empty,empty)), NN(Token(string,string)))))))))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NML(List(NML(List(NN(Token(script,script)), NNS(Token(data,data)))), NN(Token(end,end)), NN(Token(tag,tag)))), JJ(Token(open,open)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(FRAG(List(NN(Token(U,U)))), FRAG(List(NP(List(CD(Token(+0021,+0021)), NNP(Token(EXCLAMATION,EXCLAMATION)), NNP(Token(MARK,MARK)))), LBracket(Token((,()), NP(List(SYM(Token(!,!)))), RBracket(Token(),)))))))))
ROOT(List(S(List(VP(List(VB(Token(Switch,switch)), PP(List(IN(Token(to,to)), NP(List(DT(Token(the,the)), NN(Token(script,script)), NN(Token(data,datum)), NN(Token(escape,escape)), NN(Token(start,start)), NN(Token(state,state)))))))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NP(List(NN(Token(token,token)))), CC(Token(and,and)), NP(List(DT(Token(a,a)), NN(Token(U,u)))))), NP(List(CD(Token(+0021,+0021)))), NP(List(NNP(Token(EXCLAMATION,EXCLAMATION)), NNP(Token(MARK,MARK)))), NP(List(NN(Token(character,character)), NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(FRAG(List(NP(List(NN(Token(Anything,anything)), RB(Token(else,else)))), NP(List(NNP(Token(Emit,emit)))), NP(List(DT(Token(a,a)), NNP(Token(U,u)))), NP(List(CD(Token(+003,+003)))), NP(List(NNP(Token(C,c)), NNP(Token(LESS,less)))), Colon(Token(-,-)), NP(List(NNP(Token(THAN,than)), NNP(Token(SIGN,SIGN)))), NP(List(NN(Token(character,character)))), NP(List(NN(Token(token,token)))), Dot(Token(.,.))))))
ROOT(List(S(List(VP(List(VB(Token(Reconsume,reconsume)), PP(List(IN(Token(in,in)), NP(List(DT(Token(the,the)), NML(List(NN(Token(script,script)), NN(Token(data,datum)))), NN(Token(state,state)))))))), Dot(Token(.,.))))))
