(ROOT (S (S (NP (CD 12.2.5.1) (NNP Data) (NN state)) (VP (VBD Consume) (NP (DT the) (JJ next) (NN input) (NN character)))) (: :) (S (NP (NNP U) (CD +0026)) (VP (VBD AMPERSAND) (S (-LRB- -LRB-) (NP (CC &)) (-RRB- -RRB-) (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (IN to) (NP (DT the) (NN data) (NN state))))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NN character) (NN reference) (NN state)))) (. .)))
(ROOT (FRAG (NP (NML (NN U) (CD +003)) (NNP C) (NNP LESS)) (, -) (PP (IN THAN) (NP (NP (NNP SIGN)) (-LRB- -LRB-) (VP (SYM <) (NP (NN -RRB-))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NN tag) (JJ open) (NN state)))) (. .)))
(ROOT (S (NP (NML (NN U) (CD +0000)) (NNP NULL) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (ADJP (JJ unexpected) (HYPH -) (JJ null)) (HYPH -) (NN character)) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .)))
(ROOT (FRAG (NP (NNP EOF) (NNP Emit)) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)) (. .)))
(ROOT (S (NP (NN Anything) (RB else)) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .)))
(ROOT (S (S (NP (CD 12.2.5.2) (NNP RCDATA) (NN state)) (VP (VBD Consume) (NP (DT the) (JJ next) (NN input) (NN character)))) (: :) (S (NP (NNP U) (CD +0026)) (VP (VBD AMPERSAND) (S (-LRB- -LRB-) (NP (CC &)) (-RRB- -RRB-) (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (IN to) (NP (DT the) (NNP RCDATA) (NN state))))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NN character) (NN reference) (NN state)))) (. .)))
(ROOT (FRAG (NP (NML (NN U) (CD +003)) (NNP C) (NNP LESS)) (, -) (PP (IN THAN) (NP (NP (NNP SIGN)) (-LRB- -LRB-) (VP (SYM <) (NP (NN -RRB-))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (NP (DT the) (NNP RCDATA)) (ADJP (ADJP (JJR less)) (HYPH -) (PP (IN than) (NP (NN sign) (NN state))))))) (. .)))
(ROOT (S (NP (NML (NN U) (CD +0000)) (NNP NULL) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (ADJP (JJ unexpected) (HYPH -) (JJ null)) (HYPH -) (NN character)) (NN parse) (NN error))) (. .)))
(ROOT (FRAG (NP (NNP Emit)) (NP (DT a) (JJ U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)) (. .)))
(ROOT (FRAG (NP (NNP EOF) (NNP Emit)) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)) (. .)))
(ROOT (S (NP (NN Anything) (RB else)) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .)))
(ROOT (FRAG (NP (CD 12.2.5.3) (NNP RAWTEXT) (NN state)) (NP (NNP Consume)) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (NP (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (GW -LRB-)) (-LRB- <) (NP (GW -RRB-)) (ADJP (JJ Switch) (PP (IN to) (ADVP (NP (DT the) (NN RAWTEXT)) (RBR less))) (, -) (PP (IN than) (NP (NN sign)))) (NP (NN state)) (. .)))
(ROOT (S (NP (NML (NN U) (CD +0000)) (NNP NULL) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (ADJP (JJ unexpected) (HYPH -) (JJ null)) (HYPH -) (NN character)) (NN parse) (NN error))) (. .)))
(ROOT (FRAG (NP (NNP Emit)) (NP (DT a) (JJ U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)) (. .)))
(ROOT (FRAG (NP (NNP EOF) (NNP Emit)) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)) (. .)))
(ROOT (S (NP (NN Anything) (RB else)) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .)))
(ROOT (FRAG (NP (CD 12.2.5.4)) (NP (NNP Script)) (NP (NNS data)) (NP (NN state)) (NP (NNP Consume)) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (NP (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (GW -LRB-)) (-LRB- <) (NP (GW -RRB-)) (ADJP (JJ Switch) (PP (IN to) (NP (NP (DT the) (NN script) (NNS data)) (ADJP (ADJP (JJR less)) (HYPH -) (PP (IN than) (NP (NN sign))))))) (NP (NN state)) (. .)))
(ROOT (S (NP (NML (NN U) (CD +0000)) (NNP NULL) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (ADJP (JJ unexpected) (HYPH -) (JJ null)) (HYPH -) (NN character)) (NN parse) (NN error))) (. .)))
(ROOT (FRAG (NP (NNP Emit)) (NP (DT a) (JJ U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)) (. .)))
(ROOT (FRAG (NP (NNP EOF) (NNP Emit)) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)) (. .)))
(ROOT (S (NP (NN Anything) (RB else)) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .)))
(ROOT (FRAG (FRAG (NP (CD 12.2.5.5) (NML (NN PLAINTEXT) (NN state)) (NNP Consume)) (NP (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (NP (NNP U) (NNP +0000) (NNP NULL)))) (S (NP (DT This)) (VP (VBZ is) (NP (DT an) (NML (ADJP (JJ unexpected) (HYPH -) (JJ null)) (HYPH -) (NN character)) (NN parse) (NN error)))) (. .)))
(ROOT (FRAG (NP (NNP Emit)) (NP (DT a) (JJ U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)) (. .)))
(ROOT (FRAG (NP (NNP EOF) (NNP Emit)) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)) (. .)))
(ROOT (S (NP (NN Anything) (RB else)) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .)))
(ROOT (FRAG (NP (CD 12.2.5.6) (NN Tag)) (NP (JJ open) (NN state)) (NP (NNP Consume)) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (NP (NNP U)) (NP (CD +0021)) (NP (NNP EXCLAMATION) (NNP MARK)) (NP (GW -LRB-)) (. !) (-RRB- -RRB-)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (ADJP (NP (NN markup) (NN declaration)) (JJ open)) (NN state)))) (. .)))
(ROOT (S (NP (NML (NNP U) (NNP +002) (NNP F)) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (VP (VB Switch) (PP (IN to) (NP (DT the) (NML (NN end) (NN tag)) (JJ open) (NN state)))) (. .)))
(ROOT (S (NP (NNP ASCII) (NN alpha)) (VP (VP (VB Create) (NP (DT a) (JJ new) (NN start) (NN tag) (NN token))) (, ,) (VP (VB set) (NP (PRP$ its) (NN tag) (NN name)) (PP (IN to) (NP (DT the) (JJ empty) (NN string))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NN tag) (NN name) (NN state)))) (. .)))
(ROOT (FRAG (NP (NNP U) (CD +003)) (NP (NNP F) (NNP QUESTION) (NNP MARK)) (NP (GW -LRB-)) (. ?) (-RRB- -RRB-)))
(ROOT (S (NP (DT This)) (VP (VBZ is) (NP (DT an) (JJ unexpected) (NML (PP (SYM -) (NP (NN question) (HYPH -) (NN mark))) (HYPH -) (PP (ADVP (RB instead)) (HYPH -) (IN of) (HYPH -) (NP (NN tag) (HYPH -) (NN name)))) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NML (NNS data))) (S (VP (VBZ is) (NP (DT the) (JJ empty) (NN string))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (JJ bogus) (NN comment) (NN state)))) (. .)))
(ROOT (S (NP (NNP EOF) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (NML (NN eof)) (HYPH -) (PP (IN before) (HYPH -) (NP (NN tag) (HYPH -) (NN name)))) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Emit) (NP (NP (DT a) (NML (NML (NNP U) (NNP +003) (NNP C) (NNP LESS)) (HYPH -) (NML (NNP THAN) (NNP SIGN))) (NN character) (NN token)) (CC and) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)))) (. .)))
(ROOT (S (NP (NP (NN Anything) (RB else)) (NP (DT This))) (VP (VBZ is) (NP (DT an) (NML (NML (ADJP (JJ invalid) (HYPH -) (JJ first)) (HYPH -) (NN character)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN tag) (HYPH -) (NN name)))) (NN parse) (NN error))) (. .)))
(ROOT (FRAG (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NN token)) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NN data) (NN state)))) (. .)))
(ROOT (S (NP (CD 12.2.5.7) (NML (NN End) (NN tag)) (NN open) (NN state)) (VP (VBD Consume) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (S (NP (NNP ASCII) (NN alpha)) (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VB set) (NP (PRP$ its) (NN tag) (NN name)) (PP (IN to) (NP (DT the) (JJ empty) (NN string))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NN tag) (NN name) (NN state)))) (. .)))
(ROOT (S (NP (NML (NN U) (CD +003)) (NNP E) (NNP GREATER) (HYPH -) (NNP THAN)) (VP (VBP SIGN) (NP (NP (-LRB- -LRB-) (NNP >) (-RRB- -RRB-)) (SBAR (S (NP (DT This)) (VP (VBZ is) (NP (DT a) (ADJP (JJ missing) (HYPH -) (NN end)) (HYPH -) (NML (NN tag) (HYPH -) (NN name)) (NNS parse) (NN error))))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NN data) (NN state)))) (. .)))
(ROOT (S (NP (NNP EOF) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (NML (NN eof)) (HYPH -) (PP (IN before) (HYPH -) (NP (NN tag) (HYPH -) (NN name)))) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Emit) (NP (NP (DT a) (NML (NML (NNP U) (NNP +003) (NNP C) (NNP LESS)) (HYPH -) (NML (NNP THAN) (NNP SIGN))) (NN character) (NN token)) (, ,) (NP (DT a) (NML (NNP U) (NNP +002) (NNP F) (NNP SOLIDUS)) (NN character) (NN token)) (CC and) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token)))) (. .)))
(ROOT (S (NP (NP (NN Anything) (RB else)) (NP (DT This))) (VP (VBZ is) (NP (DT an) (NML (NML (ADJP (JJ invalid) (HYPH -) (JJ first)) (HYPH -) (NN character)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN tag) (HYPH -) (NN name)))) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NML (NNS data))) (S (VP (VBZ is) (NP (DT the) (JJ empty) (NN string))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (JJ bogus) (NN comment) (NN state)))) (. .)))
(ROOT (FRAG (NP (NP (CD 12.2.5.8) (NN Tag)) (NP (NN name) (NN state)) (NP (NNP Consume)) (NP (DT the) (JJ next) (NN input) (NN character))) (, :) (NP (NNP U)) (NP (CD +0009)) (NP (NNP CHARACTER) (NNP TABULATION)) (NP (-LRB- -LRB-) (NN tab) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +000)) (NP (DT A) (NN LINE)) (NP (NNP FEED)) (NP (-LRB- -LRB-) (NNP LF) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +000)) (NP (NNP C) (NNP FORM) (NNP FEED)) (NP (-LRB- -LRB-) (NNP FF) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +0020)) (NP (NNP SPACE)) (VP (VB Switch) (PP (IN to) (NP (DT the) (NML (PP (IN before) (NP (NN attribute)))) (NN name) (NN state)))) (. .)))
(ROOT (S (NP (NML (NNP U) (NNP +002) (NNP F)) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (VP (VB Switch) (PP (IN to) (NP (DT the) (NML (NN self) (HYPH -) (NN closing)) (NN start) (NN tag) (NN state)))) (. .)))
(ROOT (FRAG (NP (NNP U) (NML (CD +003) (NN E)) (NNP GREATER)) (, -) (PP (IN THAN) (NP (NNP SIGN) (-LRB- -LRB-) (NNP >) (-RRB- -RRB-) (NNP Switch))) (PP (IN to) (NP (DT the) (NN data) (NN state))) (. .)))
(ROOT (S (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token))) (. .)))
(ROOT (S (NP (NNP ASCII) (JJ upper) (NN alpha)) (VP (VBD Append) (NP (NP (DT the) (NN lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (NNS 0x0020)) (PP (IN to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (S (NP (NML (NN U) (CD +0000)) (NNP NULL) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (ADJP (JJ unexpected) (HYPH -) (JJ null)) (HYPH -) (NN character)) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (S (NP (NNP EOF) (NNP This)) (VP (VBZ is) (NP (DT an) (NML (NN eof) (HYPH -) (IN in) (HYPH -) (NN tag)) (NN parse) (NN error))) (. .)))
(ROOT (S (VP (VB Emit) (NP (DT an) (NML (NML (NN end)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN file)))) (NN token))) (. .)))
(ROOT (S (NP (NN Anything) (RB else)) (VP (VBD Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (NP (NP (NP (ADJP (ADJP (NP (CD 12.2.5.9) (NN RCDATA)) (JJR less)) (HYPH -) (PP (IN than) (NP (NN sign) (NN state)))) (NN Consume)) (NP (DT the) (JJ next) (NN input) (NN character))) (: :) (NP (NP (NML (NN U) (CD +002)) (NN F) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (VP (VBN Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (IN to) (NP (DT the) (JJ empty) (NN string))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NNP RCDATA) (NN end) (NN tag))) (NP (JJ open) (NN state))) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NN token)) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA) (NN state)))) (. .)))
(ROOT (S (NP (CD 12.2.5.10) (NML (NNP RCDATA) (NN end) (NN tag)) (NN open) (NN state)) (VP (VBD Consume) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (S (NP (NNP ASCII) (NN alpha)) (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VB set) (NP (PRP$ its) (NN tag) (NN name)) (PP (IN to) (NP (DT the) (JJ empty) (NN string))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA) (NN end) (NN tag) (NN name) (NN state)))) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NP (NN token)) (CC and) (NP (DT a) (NN U))) (NP (CD +002)) (NP (NNP F) (NNP SOLIDUS)) (NP (NN character) (NN token)) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA) (NN state)))) (. .)))
(ROOT (FRAG (NP (NP (CD 12.2.5.11)) (NP (NN RCDATA) (NN end) (NN tag) (NN name) (NN state) (NN Consume)) (NP (DT the) (JJ next) (NN input) (NN character))) (, :) (NP (NNP U)) (NP (CD +0009)) (NP (NNP CHARACTER) (NNP TABULATION)) (NP (-LRB- -LRB-) (NN tab) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +000)) (NP (DT A) (NN LINE)) (NP (NNP FEED)) (NP (-LRB- -LRB-) (NNP LF) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +000)) (NP (NNP C) (NNP FORM) (NNP FEED)) (NP (-LRB- -LRB-) (NNP FF) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +0020)) (VP (VP (VB SPACE) (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NML (NN end) (NN tag)) (NN token)))))) (, ,) (VP (ADVP (RB then)) (VB switch) (PP (IN to) (NP (DT the) (NML (PP (IN before) (NP (NN attribute)))) (NN name) (NN state))))) (. .)))
(ROOT (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (NP (NML (PP (IN per) (NP (DT the) (`` ") (NN anything) (NN else) ('' ")))) (NN entry))) (ADVP (RB below))) (. .)))
(ROOT (S (NP (NML (NNP U) (NNP +002) (NNP F)) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NML (NN end) (NN tag)) (NN token)) (, ,) (ADVP (RB then))))) (VP (VBP switch) (PP (IN to) (NP (DT the) (NML (NN self) (HYPH -) (NN closing)) (NN start) (NN tag) (NN state)))) (. .)))
(ROOT (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (NP (NML (PP (IN per) (NP (DT the) (`` ") (NN anything) (NN else) ('' ")))) (NN entry))) (ADVP (RB below))) (. .)))
(ROOT (NP (FRAG (NP (NP (NNP U) (CD +003) (NN E)) (NP (NNP GREATER) (HYPH -) (NNP THAN) (NNP SIGN))) (-LRB- -LRB-) (NP (NNP >)) (-RRB- -RRB-)) (S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NML (NN end) (NN tag)) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (IN to) (NP (DT the) (NN data) (NN state)))) (CC and) (VP (VB emit) (NP (DT the) (JJ current) (NN tag) (NN token))))) (. .)))
(ROOT (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (NP (NML (PP (IN per) (NP (DT the) (`` ") (NN anything) (NN else) ('' ")))) (NN entry))) (ADVP (RB below))) (. .)))
(ROOT (S (NP (NNP ASCII) (JJ upper) (NN alpha)) (VP (VBD Append) (NP (NP (DT the) (NN lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (NNS 0x0020)) (PP (IN to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .)))
(ROOT (S (NP (NP (NNP ASCII)) (NP (JJR lower) (NN alpha))) (VP (VBD Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (RRC (NP (DT a) (NNPS U)) (NP (NML (CD +003) (NN C)) (NNPS LESS))) (, -) (PP (IN THAN) (NP (NP (JJ SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NML (NNP U) (NNP +002) (NNP F) (NNP SOLIDUS)) (NN character) (NN token)) (, ,) (CC and) (NP (DT a) (NN character) (NN token)))) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (NNS characters)) (PP (IN in) (NP (NP (DT the) (JJ temporary) (NN buffer)) (-LRB- -LRB-) (PP (IN in) (NP (NP (DT the) (NN order)) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN added) (PP (IN to) (NP (DT the) (NN buffer))))))))) (-RRB- -RRB-))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA) (NN state)))) (. .)))
(ROOT (S (NP (CD 12.2.5.12) (JJ RAWTEXT) (ADJP (ADJP (JJR less)) (HYPH -) (PP (IN than) (NP (NN sign)))) (NN state)) (VP (VBD Consume) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (S (NP (NML (NNP U) (NNP +002) (NNP F)) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (IN to) (NP (DT the) (JJ empty) (NN string)))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (JJ RAWTEXT) (NML (NN end) (NN tag)) (JJ open) (NN state)))) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NN token)) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (JJ RAWTEXT) (NN state)))) (. .)))
(ROOT (S (NP (CD 12.2.5.13) (JJ RAWTEXT) (NML (NN end) (NN tag)) (JJ open) (NN state)) (VP (VBD Consume) (NP (DT the) (JJ next) (NN input) (NN character)) (: :) (S (NP (NNP ASCII) (NN alpha)) (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VB set) (NP (PRP$ its) (NN tag) (NN name)) (PP (IN to) (NP (DT the) (JJ empty) (NN string))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NNP RAWTEXT) (NN end) (NN tag) (NN name) (NN state)))) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NP (NN token)) (CC and) (NP (DT a) (NN U))) (NP (CD +002)) (NP (NNP F) (NNP SOLIDUS)) (NP (NN character) (NN token)) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (JJ RAWTEXT) (NN state)))) (. .)))
(ROOT (FRAG (NP (NP (CD 12.2.5.14)) (NP (NN RAWTEXT) (NN end) (NN tag) (NN name) (NN state) (NN Consume)) (NP (DT the) (JJ next) (NN input) (NN character))) (, :) (NP (NNP U)) (NP (CD +0009)) (NP (NNP CHARACTER) (NNP TABULATION)) (NP (-LRB- -LRB-) (NN tab) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +000)) (NP (DT A) (NN LINE)) (NP (NNP FEED)) (NP (-LRB- -LRB-) (NNP LF) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +000)) (NP (NNP C) (NNP FORM) (NNP FEED)) (NP (-LRB- -LRB-) (NNP FF) (-RRB- -RRB-)) (NP (NNP U)) (NP (CD +0020)) (VP (VP (VB SPACE) (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NML (NN end) (NN tag)) (NN token)))))) (, ,) (VP (ADVP (RB then)) (VB switch) (PP (IN to) (NP (DT the) (NML (PP (IN before) (NP (NN attribute)))) (NN name) (NN state))))) (. .)))
(ROOT (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (NP (NML (PP (IN per) (NP (DT the) (`` ") (NN anything) (NN else) ('' ")))) (NN entry))) (ADVP (RB below))) (. .)))
(ROOT (S (NP (NML (NNP U) (NNP +002) (NNP F)) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NML (NN end) (NN tag)) (NN token)) (, ,) (ADVP (RB then))))) (VP (VBP switch) (PP (IN to) (NP (DT the) (NML (NN self) (HYPH -) (NN closing)) (NN start) (NN tag) (NN state)))) (. .)))
(ROOT (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (NP (NML (PP (IN per) (NP (DT the) (`` ") (NN anything) (NN else) ('' ")))) (NN entry))) (ADVP (RB below))) (. .)))
(ROOT (NP (FRAG (NP (NP (NNP U) (CD +003) (NN E)) (NP (NNP GREATER) (HYPH -) (NNP THAN) (NNP SIGN))) (-LRB- -LRB-) (NP (NNP >)) (-RRB- -RRB-)) (S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NML (NN end) (NN tag)) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (IN to) (NP (DT the) (NN data) (NN state)))) (CC and) (VP (VB emit) (NP (DT the) (JJ current) (NN tag) (NN token))))) (. .)))
(ROOT (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (NP (NML (PP (IN per) (NP (DT the) (`` ") (NN anything) (NN else) ('' ")))) (NN entry))) (ADVP (RB below))) (. .)))
(ROOT (S (NP (NNP ASCII) (JJ upper) (NN alpha)) (VP (VBD Append) (NP (NP (DT the) (NN lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (NNS 0x0020)) (PP (IN to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .)))
(ROOT (S (NP (NP (NNP ASCII)) (NP (JJR lower) (NN alpha))) (VP (VBD Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .)))
(ROOT (S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (RRC (NP (DT a) (NNPS U)) (NP (NML (CD +003) (NN C)) (NNPS LESS))) (, -) (PP (IN THAN) (NP (NP (JJ SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NML (NNP U) (NNP +002) (NNP F) (NNP SOLIDUS)) (NN character) (NN token)) (, ,) (CC and) (NP (DT a) (NN character) (NN token)))) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (NNS characters)) (PP (IN in) (NP (NP (DT the) (JJ temporary) (NN buffer)) (-LRB- -LRB-) (PP (IN in) (NP (NP (DT the) (NN order)) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN added) (PP (IN to) (NP (DT the) (NN buffer))))))))) (-RRB- -RRB-))))))) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (JJ RAWTEXT) (NN state)))) (. .)))
(ROOT (NP (NP (NP (ADJP (ADJP (NP (CD 12.2.5.15) (NNP Script) (NNS data)) (JJR less)) (HYPH -) (PP (IN than) (NP (NN sign) (NN state)))) (NN Consume)) (NP (DT the) (JJ next) (NN input) (NN character))) (: :) (NP (NP (NML (NN U) (CD +002)) (NN F) (NNS SOLIDUS) (PRN (-LRB- -LRB-) (NP (SYM /)) (-RRB- -RRB-))) (VP (VBN Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (IN to) (NP (DT the) (JJ empty) (NN string))))) (. .)))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NML (NML (NN script) (NNS data)) (NN end) (NN tag)) (JJ open) (NN state)))) (. .)))
(ROOT (FRAG (FRAG (NN U)) (FRAG (NP (CD +0021) (NNP EXCLAMATION) (NNP MARK)) (-LRB- -LRB-) (NP (SYM !)) (-RRB- -RRB-))))
(ROOT (S (VP (VB Switch) (PP (IN to) (NP (DT the) (NN script) (NN data) (NN escape) (NN start) (NN state)))) (. .)))
(ROOT (FRAG (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NP (NN token)) (CC and) (NP (DT a) (NN U))) (NP (CD +0021)) (NP (NNP EXCLAMATION) (NNP MARK)) (NP (NN character) (NN token)) (. .)))
(ROOT (FRAG (NP (NN Anything) (RB else)) (NP (NNP Emit)) (NP (DT a) (NNP U)) (NP (CD +003)) (NP (NNP C) (NNP LESS)) (: -) (NP (NNP THAN) (NNP SIGN)) (NP (NN character)) (NP (NN token)) (. .)))
(ROOT (S (VP (VB Reconsume) (PP (IN in) (NP (DT the) (NML (NN script) (NN data)) (NN state)))) (. .)))
