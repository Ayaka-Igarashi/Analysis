67 : After DOCTYPE system identifier state
-- chara: U+0009 CHARACTER TABULATION (tab) --
Ignore the character.
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Ignore,ignore)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(character,character)))))), Leaf(Dot,Token(.,.))))))

 -> Ignore(List (the_character, ))

-- chara: U+000A LINE FEED (LF) --
Ignore the character.
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Ignore,ignore)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(character,character)))))), Leaf(Dot,Token(.,.))))))

 -> Ignore(List (the_character, ))

-- chara: U+000C FORM FEED (FF) --
Ignore the character.
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Ignore,ignore)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(character,character)))))), Leaf(Dot,Token(.,.))))))

 -> Ignore(List (the_character, ))

-- chara: U+0020 SPACE --
Ignore the character.
List()
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Ignore,ignore)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(character,character)))))), Leaf(Dot,Token(.,.))))))

 -> Ignore(List (the_character, ))

-- chara: U+003E GREATER-THAN SIGN (&gt;) --
you Switch to the data state. you Emit the current DOCTYPE token.
List((5,CHAIN5-["you" in sentence 1]))
List((5,CHAIN5-["you" in sentence 2]))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Switch,switch)), Node(PP,List(Leaf(IN,Token(to,to)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(NN,Token(data,datum)), Leaf(NN,Token(state,state)))))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Emit,emit)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(current,current)), Leaf(JJ,Token(DOCTYPE,doctype)), Leaf(NN,Token(token,token)))))), Leaf(Dot,Token(.,.))))))

 -> Switch(the_data_state)
 -> Emit(List (the_current_DOCTYPE_token, ))

-- chara: EOF --
This is an eof-in-doctype parse error. Set the DOCTYPE token's force-quirks flag to on. you Emit that DOCTYPE token. you Emit an end-of-file token.
List()
List((7,CHAIN7-["the DOCTYPE token 's" in sentence 2]))
List((7,CHAIN7-["that DOCTYPE token" in sentence 3]), (9,CHAIN9-["you" in sentence 3]))
List((9,CHAIN9-["you" in sentence 4]))
Node(ROOT,List(Node(S,List(Node(NP,List(Leaf(DT,Token(This,this)))), Node(VP,List(Leaf(VB,Token(is,be)), Node(NP,List(Leaf(DT,Token(an,a)), Node(NML,List(Node(NML,List(Leaf(NN,Token(eof,eof)))), Leaf(HYPH,Token(-,-)), Node(PP,List(Leaf(IN,Token(in,in)), Leaf(HYPH,Token(-,-)), Node(NP,List(Leaf(JJ,Token(doctype,doctype)), Leaf(NNS,Token(parse,parse)))))))), Leaf(NN,Token(error,error)))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Set,set)), Node(NP,List(Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(DOCTYPE,doctype)), Leaf(NN,Token(token,token)), Leaf(POS,Token('s,'s)))), Node(NML,List(Leaf(NN,Token(force,force)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(quirks,quirk)))), Leaf(NN,Token(flag,flag)))), Node(PP,List(Leaf(IN,Token(to,to)), Node(PP,List(Leaf(IN,Token(on,on)))))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Emit,emit)), Node(NP,List(Leaf(DT,Token(that,that)), Leaf(JJ,Token(DOCTYPE,doctype)), Leaf(NN,Token(token,token)))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Emit,emit)), Node(NP,List(Leaf(DT,Token(an,a)), Node(NML,List(Node(NML,List(Leaf(NN,Token(end,end)))), Leaf(HYPH,Token(-,-)), Node(PP,List(Leaf(IN,Token(of,of)), Leaf(HYPH,Token(-,-)), Node(NP,List(Leaf(NN,Token(file,file)))))))), Leaf(NN,Token(token,token)))))), Leaf(Dot,Token(.,.))))))

 -> Error(an_eof_-_in_-_doctype_parse_error)
 -> Set(the_DOCTYPE_token_'s_force_-_quirks_flag,on)
 -> Emit(List (that_DOCTYPE_token, ))
 -> Emit(List (an_end_-_of_-_file_token, ))

-- chara: Anything else --
This is an unexpected-character-after-doctype-system-identifier parse error. you Reconsume in the bogus DOCTYPE state. (This does not set the DOCTYPE token's force-quirks flag to on.)
List((9,CHAIN9-["This" in sentence 1]))
List()
List((9,CHAIN9-["This" in sentence 3]))
Node(ROOT,List(Node(S,List(Node(NP,List(Leaf(DT,Token(This,this)))), Node(VP,List(Leaf(VB,Token(is,be)), Node(NP,List(Leaf(DT,Token(an,a)), Node(NML,List(Node(NP,List(Leaf(JJ,Token(unexpected,unexpected)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(character,character)))), Leaf(HYPH,Token(-,-)), Node(PP,List(Leaf(IN,Token(after,after)), Leaf(HYPH,Token(-,-)), Node(NP,List(Leaf(NN,Token(doctype,doctype)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(system,system)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(identifier,identifier)))))))), Leaf(NN,Token(parse,parse)), Leaf(NN,Token(error,error)))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Node(VP,List(Leaf(VB,Token(Reconsume,reconsume)), Node(PP,List(Leaf(IN,Token(in,in)), Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(bogus,bogus)), Leaf(JJ,Token(DOCTYPE,doctype)), Leaf(NN,Token(state,state)))))))), Leaf(Dot,Token(.,.))))))
Node(ROOT,List(Node(S,List(Leaf(LBracket,Token((,()), Node(NP,List(Leaf(DT,Token(This,this)))), Node(VP,List(Leaf(VB,Token(does,do)), Leaf(RB,Token(not,not)), Node(VP,List(Leaf(VB,Token(set,set)), Node(NP,List(Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(DOCTYPE,doctype)), Leaf(NN,Token(token,token)), Leaf(POS,Token('s,'s)))), Node(NML,List(Leaf(NN,Token(force,force)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(quirks,quirk)))), Leaf(NN,Token(flag,flag)))), Node(PP,List(Leaf(IN,Token(to,to)), Node(PP,List(Leaf(IN,Token(on,on)))))))))), Leaf(Dot,Token(.,.)), Leaf(RBracket,Token(),)))))))
not match_s : List(Leaf(LBracket,Token((,()), Node(NP,List(Leaf(DT,Token(This,this)))), Node(VP,List(Leaf(VB,Token(does,do)), Leaf(RB,Token(not,not)), Node(VP,List(Leaf(VB,Token(set,set)), Node(NP,List(Node(NP,List(Leaf(DT,Token(the,the)), Leaf(JJ,Token(DOCTYPE,doctype)), Leaf(NN,Token(token,token)), Leaf(POS,Token('s,'s)))), Node(NML,List(Leaf(NN,Token(force,force)), Leaf(HYPH,Token(-,-)), Leaf(NN,Token(quirks,quirk)))), Leaf(NN,Token(flag,flag)))), Node(PP,List(Leaf(IN,Token(to,to)), Node(PP,List(Leaf(IN,Token(on,on)))))))))), Leaf(Dot,Token(.,.)), Leaf(RBracket,Token(),))))

 -> Error(an_unexpected_-_character_-_after_-_doctype_-_system_-_identifier_parse_error)
 -> Reconsume(the_bogus_DOCTYPE_state)

