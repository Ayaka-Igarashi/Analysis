contentModelFlags
testnum :1;
state : PLAINTEXT_state
lastStartTagName : plaintext
input : "<head>&body;"
implement : List(characterToken(<head>&body;), endOfFileToken())
correct : List(characterToken(<head>&body;), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :2;
state : PLAINTEXT_state
lastStartTagName : plaintext
input : "</plaintext>&body;"
implement : List(characterToken(</plaintext>&body;), endOfFileToken())
correct : List(characterToken(</plaintext>&body;), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :3;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xmp>"
implement : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :4;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xmp>"
implement : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :5;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xMp>"
implement : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :6;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xMp>"
implement : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(foo), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :7;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xmp "
implement : List(characterToken(foo), endOfFileToken())
correct : List(characterToken(foo), endOfFileToken())
implement_error : List(eof_in_tag parse error)
correct_error :  eof-in-tag
 -> true

testnum :8;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xmp "
implement : List(characterToken(foo), endOfFileToken())
correct : List(characterToken(foo), endOfFileToken())
implement_error : List(eof_in_tag parse error)
correct_error :  eof-in-tag
 -> true

testnum :9;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xmp"
implement : List(characterToken(foo</xmp), endOfFileToken())
correct : List(characterToken(foo</xmp), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :10;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xmp"
implement : List(characterToken(foo</xmp), endOfFileToken())
correct : List(characterToken(foo</xmp), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :11;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xmp/"
implement : List(characterToken(foo), endOfFileToken())
correct : List(characterToken(foo), endOfFileToken())
implement_error : List(eof_in_tag parse error)
correct_error :  eof-in-tag
 -> true

testnum :12;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xmp/"
implement : List(characterToken(foo), endOfFileToken())
correct : List(characterToken(foo), endOfFileToken())
implement_error : List(eof_in_tag parse error)
correct_error :  eof-in-tag
 -> true

testnum :13;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xmp<"
implement : List(characterToken(foo</xmp<), endOfFileToken())
correct : List(characterToken(foo</xmp<), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :14;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xmp<"
implement : List(characterToken(foo</xmp<), endOfFileToken())
correct : List(characterToken(foo</xmp<), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :15;
state : RAWTEXT_state
lastStartTagName : xmp
input : "</foo>bar</xmp>"
implement : List(characterToken(</foo>bar), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(</foo>bar), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :16;
state : RCDATA_state
lastStartTagName : xmp
input : "</foo>bar</xmp>"
implement : List(characterToken(</foo>bar), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(</foo>bar), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :17;
state : RAWTEXT_state
lastStartTagName : xmp
input : "</xmp</xmp</xmp>"
implement : List(characterToken(</xmp</xmp), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(</xmp</xmp), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :18;
state : RCDATA_state
lastStartTagName : xmp
input : "</xmp</xmp</xmp>"
implement : List(characterToken(</xmp</xmp), tagToken(false,xmp,false,List()), endOfFileToken())
correct : List(characterToken(</xmp</xmp), tagToken(false,xmp,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :19;
state : RAWTEXT_state
lastStartTagName : xmp
input : "</foo>bar</xmpaar>"
implement : List(characterToken(</foo>bar</xmpaar>), endOfFileToken())
correct : List(characterToken(</foo>bar</xmpaar>), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :20;
state : RCDATA_state
lastStartTagName : xmp
input : "</foo>bar</xmpaar>"
implement : List(characterToken(</foo>bar</xmpaar>), endOfFileToken())
correct : List(characterToken(</foo>bar</xmpaar>), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :21;
state : RAWTEXT_state
lastStartTagName : xmp
input : "foo</xmp></baz>"
implement : List(characterToken(foo), tagToken(false,xmp,false,List()), tagToken(false,baz,false,List()), endOfFileToken())
correct : List(characterToken(foo), tagToken(false,xmp,false,List()), tagToken(false,baz,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :22;
state : RCDATA_state
lastStartTagName : xmp
input : "foo</xmp></baz>"
implement : List(characterToken(foo), tagToken(false,xmp,false,List()), tagToken(false,baz,false,List()), endOfFileToken())
correct : List(characterToken(foo), tagToken(false,xmp,false,List()), tagToken(false,baz,false,List()), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :23;
state : RAWTEXT_state
lastStartTagName : xmp
input : "&foo;"
implement : List(characterToken(&foo;), endOfFileToken())
correct : List(characterToken(&foo;), endOfFileToken())
implement_error : List()
correct_error : 
 -> true

testnum :24;
state : RCDATA_state
lastStartTagName : textarea
input : "&lt;"
implement : List(characterToken(<), endOfFileToken())
correct : List(characterToken(<), endOfFileToken())
implement_error : List(missing_semicolon_after_character_reference parse error)
correct_error : 
 -> true

